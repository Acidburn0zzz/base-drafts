[
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/364",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/364/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/364/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/364/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/364",
    "id": 212318919,
    "number": 364,
    "title": "Mid-frame close",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-07T03:16:57Z",
    "updated_at": "2017-03-07T03:16:57Z",
    "closed_at": null,
    "body": "We need errors for when a stream is ended in the middle of a frame."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/363",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/363/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/363/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/363/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/363",
    "id": 212306824,
    "number": 363,
    "title": "HTTP/2 Guidance and Extensions",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-07T01:54:03Z",
    "updated_at": "2017-03-07T01:54:03Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/363",
      "html_url": "https://github.com/quicwg/base-drafts/pull/363",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/363.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/363.patch"
    },
    "body": "Collates the HTTP/2 migration guidance from various places into a single section, and expands on details about how HTTP/2 extensions can be used/ported.  In the process, I added more IANA stuff, which should address the HTTP portion of #359.\r\n\r\nBuilds on #274; Closes #242."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/361",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/361/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/361/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/361/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/361",
    "id": 212297288,
    "number": 361,
    "title": "Alternative header proposal",
    "user": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-07T00:52:24Z",
    "updated_at": "2017-03-07T01:54:54Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/361",
      "html_url": "https://github.com/quicwg/base-drafts/pull/361",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/361.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/361.patch"
    },
    "body": "This PR proposes an alternative header format for QUIC.  It is based on a previous proposal and incorporates feedback received on the list. This PR is unfortunately quite invasive.\r\n\r\nCloses:\r\n#35: Starting packet number\r\n#56: Extending flags\r\n#119: Server-proposed connection ID\r\n#133: Connection ID in version negotiation\r\n#135: DoS using Version Negotiation Packets\r\n#147: Reflection Attack Resistance\r\n#185: Reliable identification of the initial packet for a connection\r\n#193: Flags section is kind of confusing\r\n#244: Need a NONCE in version negotiation packets\r\n#293: Does the connection ID need to be in a consistent location\r\n#295: Connection ID on a version negotiation packet\r\n\r\n(also addresses some of:\r\n#148: QUIC packet header complexity\r\n#170: Connection ID collisions)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/360",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/360/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/360/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/360/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/360",
    "id": 212263506,
    "number": 360,
    "title": "Clarify the Timestamps section",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-06T22:00:37Z",
    "updated_at": "2017-03-07T03:56:16Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/360",
      "html_url": "https://github.com/quicwg/base-drafts/pull/360",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/360.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/360.patch"
    },
    "body": "Intends to resolve #308 "
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/359",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/359/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/359/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/359/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/359",
    "id": 212251457,
    "number": 359,
    "title": "IANA registries for error codes",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-06T21:12:58Z",
    "updated_at": "2017-03-06T21:12:58Z",
    "closed_at": null,
    "body": "Since we've split these up and they're composable, we probably need three registries here.  (Host-local doesn't get a registry, obviously.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/358",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/358/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/358/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/358/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/358",
    "id": 212251310,
    "number": 358,
    "title": "Remove STOP_WAITING frame",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-06T21:12:22Z",
    "updated_at": "2017-03-06T23:56:51Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/358",
      "html_url": "https://github.com/quicwg/base-drafts/pull/358",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/358.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/358.patch"
    },
    "body": "First pass at removing the STOP_WAITING frame.  Intends to resolve #66 ."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/357",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/357/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/357/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/357/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/357",
    "id": 211586432,
    "number": 357,
    "title": "Use definition lists more",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-03T03:33:41Z",
    "updated_at": "2017-03-03T03:33:41Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/357",
      "html_url": "https://github.com/quicwg/base-drafts/pull/357",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/357.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/357.patch"
    },
    "body": "There were a few places where bullet lists were used to carry definitions.  This switches to using definition lists.  I also aligned the transport parameter table."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/356",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/356/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/356/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/356/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/356",
    "id": 211284381,
    "number": 356,
    "title": "Narrow the packet number encoding range requirement",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-02T04:10:56Z",
    "updated_at": "2017-03-02T04:10:56Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/356",
      "html_url": "https://github.com/quicwg/base-drafts/pull/356",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/356.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/356.patch"
    },
    "body": "To one that is based on mathematics.\r\n\r\nI didn't take Ian's text, I thought that some expository text might help, even if I didn't go into detail about huge loss-gaps.  I also didn't use \"SHOULD\" regarding a larger value.  Any reordering that is enough to cause the packet number to be decoded incorrectly is *also* going to be repaired as a result of the loss recovery algorithm, so it's only really a safeguard against perverse reordering scenarios and to *maybe* avoid having the receiver need the retransmission.\r\n\r\nI also had to rework the example.\r\n\r\nCloses #323."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/355",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/355/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/355/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/355/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/355",
    "id": 211279532,
    "number": 355,
    "title": "Remove error code and reason phrase from GOAWAY",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-03-02T03:33:10Z",
    "updated_at": "2017-03-06T16:43:57Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/355",
      "html_url": "https://github.com/quicwg/base-drafts/pull/355",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/355.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/355.patch"
    },
    "body": "In an error condition, CONNECTION_CLOSE is your friend.\r\n\r\nCloses #352. Builds on #354."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/354",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/354/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/354/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/354/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/354",
    "id": 211277865,
    "number": 354,
    "title": "GOAWAY needs a maximum stream number in both directions",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-02T03:20:21Z",
    "updated_at": "2017-03-05T22:57:05Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/354",
      "html_url": "https://github.com/quicwg/base-drafts/pull/354",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/354.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/354.patch"
    },
    "body": "I have also taken the liberty of updating the text that surrounds the frame type.\r\n\r\n@janaiyengar, @mnot, @larseggert, I believe that this is basically a bugfix and it doesn't need any more discussion that it has already.  If you disagree, then we'll hold off on merging until we've had more discussion.\r\n\r\nCloses #347."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/353",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/353/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/353/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/353/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/353",
    "id": 211254850,
    "number": 353,
    "title": "Replace CONNECTION_CLOSE with Public Reset",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-03-02T00:42:38Z",
    "updated_at": "2017-03-02T23:11:50Z",
    "closed_at": null,
    "body": "@martinduke suggested that we might remove CONNECTION_CLOSE in favour of using a Public Reset packet.  That would require that the error code be made public knowledge.\r\n\r\nI can see a few advantages for a middlebox, primary of these being a clear signal that a connection is done (though that would not be something that could be strongly authenticated).  It would also simplify state on servers that decide to terminate a connection: they only have to keep whatever information they need to generate a Public Reset, which is a single piece of global state. \r\n\r\nThe downside is the insights that the error code give into the otherwise confidential operations of the protocol (we'd likely want to tighten the level of detail in error codes).  Also, it means that a server that wants to permit retries would have to send two packets: a GOAWAY packet in addition to the Public Reset."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/352",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/352/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/352/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/352/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/352",
    "id": 211254055,
    "number": 352,
    "title": "Does GOAWAY need an error code",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-02T00:38:07Z",
    "updated_at": "2017-03-02T01:50:01Z",
    "closed_at": null,
    "body": "In writing up a change for GOAWAY, I realize that it doesn't need to signal the error condition that triggered it.  An endpoint that wants to kill a connection can use CONNECTION_CLOSE and the error code that carries.  The purpose of GOAWAY is to signal graceful shutdown and to mark multiple streams as being safe to retry.\r\n\r\nIf it doesn't need an error code, then the reason phrase can go away as well.\r\n\r\n(This might depend on the outcome of discussions that suggest that CONNECTION_CLOSE could be replaced by Public Reset.  Or, it might influence the outcome of that discussion...)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/351",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/351/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/351/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/351/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/351",
    "id": 211197045,
    "number": 351,
    "title": "Packet number echo",
    "user": {
      "login": "britram",
      "id": 1884116,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1884116?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/britram",
      "html_url": "https://github.com/britram",
      "followers_url": "https://api.github.com/users/britram/followers",
      "following_url": "https://api.github.com/users/britram/following{/other_user}",
      "gists_url": "https://api.github.com/users/britram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/britram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/britram/subscriptions",
      "organizations_url": "https://api.github.com/users/britram/orgs",
      "repos_url": "https://api.github.com/users/britram/repos",
      "events_url": "https://api.github.com/users/britram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/britram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-01T20:22:58Z",
    "updated_at": "2017-03-03T19:57:22Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/351",
      "html_url": "https://github.com/quicwg/base-drafts/pull/351",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/351.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/351.patch"
    },
    "body": "Initial suggestion to address #269, based on alternate header proposal from @janaiyengar "
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/349",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/349/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/349/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/349/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/349",
    "id": 210650205,
    "number": 349,
    "title": "When should server-chosen connection IDs be sent and how are they indicated?",
    "user": {
      "login": "RyanAtGoogle",
      "id": 19561162,
      "avatar_url": "https://avatars0.githubusercontent.com/u/19561162?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanAtGoogle",
      "html_url": "https://github.com/RyanAtGoogle",
      "followers_url": "https://api.github.com/users/RyanAtGoogle/followers",
      "following_url": "https://api.github.com/users/RyanAtGoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanAtGoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanAtGoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanAtGoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanAtGoogle/orgs",
      "repos_url": "https://api.github.com/users/RyanAtGoogle/repos",
      "events_url": "https://api.github.com/users/RyanAtGoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanAtGoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-02-28T00:27:13Z",
    "updated_at": "2017-03-03T12:18:00Z",
    "closed_at": null,
    "body": "My sense is that we'd like the server to chose the \"real\" connection ID to be used for a connection. Among other things, this enables servers to embed routing/load balancing information into connection IDs.\r\n\r\nI have heard two options for what the client should do before it has a server-chosen connection ID.\r\n\r\n1) Send a random connection ID\r\n2) Send a connection ID of 0\r\n\r\nIf we go with approach 1, then we need some mechanism that load balancers can use to detect if a packet's connection ID is server-chosen or not. It seems likely that all packets encrypted with 1-RTT keys could use server generated connection IDs. But other packets it's not so clear. Consider the case of a non-0-RTT handshake. The initial client handshake packet would include a client-chosen connection ID. When the server replies, it could use a server-chosen connection ID. If so then when the client sends the next handshake packet it could use the server-chosen connection ID as well. But that means that we'd need a mechanism to disambiguate client handshake packets with client-chosen connection IDs from client handshake packets with server-chosen connection IDs. We could devote bits or packet types to indicate this. I suspect the same argument might hold for server handshake packets. We might not want the server to chose a connection ID until it is ready to accept the handshake.\r\n\r\nOne benefit of this approach, however, is that a QUIC server could chose to simply use the client's connection ID for the duration of the connection. This would mean that it would not need to be able to generate a new connection ID that is guaranteed to be sent by the load balancer back to itself. In cases where the vendor of the load balancer and the server are not the same, this might be valuable.\r\n\r\nIf we go with approach 2, then it's obvious that any packet with a non-zero connection ID has a server-chosen connection ID (though the server still may want to verify that it's a \"valid\" connection ID according to the algorithm it uses). \r\n\r\nOn the other hand, this requires QUIC servers which are behind load balancers to be able to generate connection IDs which the load balancer will route back to them. If the server and load balancers are from different vendors, this might be challenging.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/348",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/348/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/348/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/348/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/348",
    "id": 210146698,
    "number": 348,
    "title": "Define \"httpq\"",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 517015633,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/needs-discussion",
        "name": "needs-discussion",
        "color": "d93f0b",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-24T20:12:33Z",
    "updated_at": "2017-02-27T05:57:35Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/348",
      "html_url": "https://github.com/quicwg/base-drafts/pull/348",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/348.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/348.patch"
    },
    "body": "Closes #253.  I think there's value in having a way to specify a QUIC-only (or QUIC-first, though less so) endpoint for the reasons described in the issue."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/347",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/347/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/347/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/347/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/347",
    "id": 210072660,
    "number": 347,
    "title": "Clarify meaning/definition of GOAWAY",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-24T15:11:01Z",
    "updated_at": "2017-03-01T23:38:54Z",
    "closed_at": null,
    "body": "GOAWAY has a \"Last Good Stream ID\", which is \"The last Stream ID which was accepted by the sender of the GOAWAY message. If no streams were replied to, this value must be set to 0.\"\r\n\r\nThe sender does not specify the last stream id it will use, which I think it should.\r\n\r\nI also think the text in \"6.6 Connection Termination\" should specify that all streams <= the Last Good Stream ID will be completed(fin'd or reset), including delivering any outstanding data. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/345",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/345/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/345/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/345/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/345",
    "id": 209964162,
    "number": 345,
    "title": "Add a section on what to do when unprotecting a packet fails",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "seanturner",
      "id": 4488966,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4488966?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanturner",
      "html_url": "https://github.com/seanturner",
      "followers_url": "https://api.github.com/users/seanturner/followers",
      "following_url": "https://api.github.com/users/seanturner/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanturner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanturner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanturner/subscriptions",
      "organizations_url": "https://api.github.com/users/seanturner/orgs",
      "repos_url": "https://api.github.com/users/seanturner/repos",
      "events_url": "https://api.github.com/users/seanturner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanturner/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "seanturner",
        "id": 4488966,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4488966?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seanturner",
        "html_url": "https://github.com/seanturner",
        "followers_url": "https://api.github.com/users/seanturner/followers",
        "following_url": "https://api.github.com/users/seanturner/following{/other_user}",
        "gists_url": "https://api.github.com/users/seanturner/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seanturner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seanturner/subscriptions",
        "organizations_url": "https://api.github.com/users/seanturner/orgs",
        "repos_url": "https://api.github.com/users/seanturner/repos",
        "events_url": "https://api.github.com/users/seanturner/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seanturner/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-24T05:36:40Z",
    "updated_at": "2017-03-02T00:07:48Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/345",
      "html_url": "https://github.com/quicwg/base-drafts/pull/345",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/345.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/345.patch"
    },
    "body": "Closes #32, #33."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/344",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/344/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/344/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/344/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/344",
    "id": 209950077,
    "number": 344,
    "title": "Justify retransmitting handshake packets so slowly",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-02-24T03:24:15Z",
    "updated_at": "2017-02-25T16:32:14Z",
    "closed_at": null,
    "body": "A lost handshake packet is retransmitted after 400ms (assuming that you don't have prior knowledge of the RTT, if you do then it is 2xRTT).  I realize that this is probably shorter than in TCP, but it's still a damned long time to wait.\r\n\r\nWe are far more aggressive in this in WebRTC with DTLS.  For example, NSS retransmits three times before QUIC even sends its first: at 50ms, 150ms, and 350ms.  We haven't seen much evidence that this is bring the Internet to its knees.  It's certainly good for latency to retransmit more aggressively.  Separately, we also send ICE probes much faster, without the back-off, though those are typically much smaller.\r\n\r\nThat said, if retransmitting at this pace is somehow doing damage to something, it would be good to understand why this is the case.  We're definitely interested in avoiding an inadvertent damage that we're doing and changing the above numbers could happen pretty quickly with proper justification."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/341",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/341/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/341/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/341/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/341",
    "id": 209903637,
    "number": 341,
    "title": "What does it mean to acknowledge something?",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-23T22:27:10Z",
    "updated_at": "2017-02-24T00:34:06Z",
    "closed_at": null,
    "body": "We're starting to see a few cases where ACK frames are being used to close the loop on things.  But that raises questions like \"if a peer acknowledges a packet containing a GOAWAY, does that mean I can assume that stream above the mentioned number are now closed at their end?\"\r\n\r\nI think that we need to state what the rule is, and it should be simple.  An acknowledgement for a packet implies that all QUIC-level control messages have been read and processed.\r\n\r\nThis includes PING, ACK, RST_STREAM, GOAWAY, etc...  I think that it also has to include FIN bits on STREAM frames.  That implies that the *transport* must have finished handling all the messages.\r\n\r\nThe application protocol might not have consumed the data from STREAM frames, but that is the only thing that is considered outstanding when a packet is acknowledged.  We have a special sort of acknowledgment for data: flow control credits.\r\n\r\nIf we add features that include special acknowledgement (like flow control), then those would be excluded, but that would be explicitly stated.  Otherwise, if it is in the transport and it is acknowledged, then it has been processed by the receiver."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/340",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/340/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/340/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/340/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/340",
    "id": 209901949,
    "number": 340,
    "title": "Scale flow control offsets",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-23T22:19:39Z",
    "updated_at": "2017-02-23T22:19:39Z",
    "closed_at": null,
    "body": "@ddragana observes that the 64-bit offset value in the WINDOW_UPDATE message is probably the first value that we will run out of (over packet numbers and stream numbers, which should last a bit longer in most cases).  We could avoid this by multiplying these values by a constant (she suggests 1024), which would reduce the granularity with which flow control credits could be granted, but increase the total lifetime of a long-lived connection.\r\n\r\nSo, trade-off time.  The scaling multiplier is now 1.  A larger value allows for longer-lived connections, a shorter value allows finer control over flow control.  I'd suggest that values in the order of 8 are probably easy to justify, can we go as high as 1024?\r\n\r\nWe could also choose a different value for the connection and stream flow control offsets on that basis that connections need more octets, whereas streams do not."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/339",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/339/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/339/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/339/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/339",
    "id": 209732462,
    "number": 339,
    "title": "Symbolic labels for some references",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-23T11:15:08Z",
    "updated_at": "2017-02-23T11:15:08Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/339",
      "html_url": "https://github.com/quicwg/base-drafts/pull/339",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/339.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/339.patch"
    },
    "body": "This depends on https://github.com/cabo/kramdown-rfc2629/pull/35, so it won't build right now."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/338",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/338/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/338/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/338/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/338",
    "id": 209666673,
    "number": 338,
    "title": "ClientHello needs to fit in a single packet",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-23T05:18:25Z",
    "updated_at": "2017-03-03T00:28:26Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/338",
      "html_url": "https://github.com/quicwg/base-drafts/pull/338",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/338.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/338.patch"
    },
    "body": "I'm marking this as editorial.  It touches both TLS and transport.  Anyone who thinks that this is OK can merge it."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/337",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/337/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/337/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/337/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/337",
    "id": 209664083,
    "number": 337,
    "title": "The client Finished message can't be protected with 1-RTT keys",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "seanturner",
      "id": 4488966,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4488966?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanturner",
      "html_url": "https://github.com/seanturner",
      "followers_url": "https://api.github.com/users/seanturner/followers",
      "following_url": "https://api.github.com/users/seanturner/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanturner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanturner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanturner/subscriptions",
      "organizations_url": "https://api.github.com/users/seanturner/orgs",
      "repos_url": "https://api.github.com/users/seanturner/repos",
      "events_url": "https://api.github.com/users/seanturner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanturner/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "seanturner",
        "id": 4488966,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4488966?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seanturner",
        "html_url": "https://github.com/seanturner",
        "followers_url": "https://api.github.com/users/seanturner/followers",
        "following_url": "https://api.github.com/users/seanturner/following{/other_user}",
        "gists_url": "https://api.github.com/users/seanturner/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seanturner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seanturner/subscriptions",
        "organizations_url": "https://api.github.com/users/seanturner/orgs",
        "repos_url": "https://api.github.com/users/seanturner/repos",
        "events_url": "https://api.github.com/users/seanturner/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seanturner/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-23T04:55:25Z",
    "updated_at": "2017-02-23T04:55:25Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/337",
      "html_url": "https://github.com/quicwg/base-drafts/pull/337",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/337.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/337.patch"
    },
    "body": "This actually simplifies things a fair bit.  Now we can just say that 1-RTT keys are available when the Finished message is sent.\r\n\r\nCloses #262."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/336",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/336/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/336/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/336/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/336",
    "id": 209659176,
    "number": 336,
    "title": "Adding section on packet protection rules",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-23T04:10:54Z",
    "updated_at": "2017-02-27T14:11:04Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/336",
      "html_url": "https://github.com/quicwg/base-drafts/pull/336",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/336.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/336.patch"
    },
    "body": "This is - at the moment - a little redundant with text in the -tls document.  That's probably OK until we sort out where that text belongs.\r\n\r\nCloses #34."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/333",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/333/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/333/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/333/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/333",
    "id": 209377948,
    "number": 333,
    "title": "improve-sst-reference",
    "user": {
      "login": "reschke",
      "id": 332994,
      "avatar_url": "https://avatars0.githubusercontent.com/u/332994?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reschke",
      "html_url": "https://github.com/reschke",
      "followers_url": "https://api.github.com/users/reschke/followers",
      "following_url": "https://api.github.com/users/reschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/reschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reschke/subscriptions",
      "organizations_url": "https://api.github.com/users/reschke/orgs",
      "repos_url": "https://api.github.com/users/reschke/repos",
      "events_url": "https://api.github.com/users/reschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-22T07:55:56Z",
    "updated_at": "2017-02-23T11:13:33Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/333",
      "html_url": "https://github.com/quicwg/base-drafts/pull/333",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/333.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/333.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/331",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/331/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/331/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/331/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/331",
    "id": 209375364,
    "number": 331,
    "title": "recovery-unused-references",
    "user": {
      "login": "reschke",
      "id": 332994,
      "avatar_url": "https://avatars0.githubusercontent.com/u/332994?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reschke",
      "html_url": "https://github.com/reschke",
      "followers_url": "https://api.github.com/users/reschke/followers",
      "following_url": "https://api.github.com/users/reschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/reschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reschke/subscriptions",
      "organizations_url": "https://api.github.com/users/reschke/orgs",
      "repos_url": "https://api.github.com/users/reschke/repos",
      "events_url": "https://api.github.com/users/reschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-22T07:40:26Z",
    "updated_at": "2017-02-22T20:42:17Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/331",
      "html_url": "https://github.com/quicwg/base-drafts/pull/331",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/331.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/331.patch"
    },
    "body": "These references are unused."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/330",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/330/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/330/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/330/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/330",
    "id": 209254695,
    "number": 330,
    "title": "Clarify meaning of CONNECTION_CLOSE",
    "user": {
      "login": "RyanAtGoogle",
      "id": 19561162,
      "avatar_url": "https://avatars0.githubusercontent.com/u/19561162?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanAtGoogle",
      "html_url": "https://github.com/RyanAtGoogle",
      "followers_url": "https://api.github.com/users/RyanAtGoogle/followers",
      "following_url": "https://api.github.com/users/RyanAtGoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanAtGoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanAtGoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanAtGoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanAtGoogle/orgs",
      "repos_url": "https://api.github.com/users/RyanAtGoogle/repos",
      "events_url": "https://api.github.com/users/RyanAtGoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanAtGoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-02-21T19:53:52Z",
    "updated_at": "2017-02-28T11:04:23Z",
    "closed_at": null,
    "body": "From discussion on the list, we could clarify the meaning of CONNECTION_CLOSE. Specifically, it would be good to clarify if it acts more like a TCP FIN or a TCP RST. I would suggest that the analog of a TCP FIN is a FIN on a QUIC stream as they both gracefully half-close a single bidirectional communication channel. After a FIN, retransmission of data may still occur to deal with packet loss.\r\n\r\nA QUIC CONNECTION_CLOSE, on the other hand, is an immediate termination of the connection. No more data is retransmitted. As such it is more like a TCP RST."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/328",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/328/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/328/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/328/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/328",
    "id": 208948748,
    "number": 328,
    "title": "TIME_WAIT",
    "user": {
      "login": "mcmanus",
      "id": 260531,
      "avatar_url": "https://avatars2.githubusercontent.com/u/260531?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmanus",
      "html_url": "https://github.com/mcmanus",
      "followers_url": "https://api.github.com/users/mcmanus/followers",
      "following_url": "https://api.github.com/users/mcmanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmanus/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmanus/orgs",
      "repos_url": "https://api.github.com/users/mcmanus/repos",
      "events_url": "https://api.github.com/users/mcmanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-02-20T17:57:59Z",
    "updated_at": "2017-02-27T19:01:40Z",
    "closed_at": null,
    "body": "6.4 currently has\r\n`TODO: Connections that are terminated are added to a TIME_WAIT list at the server, so as to absorb any straggler packets in the network. Discuss TIME_WAIT list.`\r\n\r\nthis is an open issue for the TODO.\r\n\r\nSome initial thoughts: is it always the server that is in TIME_WAIT as opposed to the TCP active close behavior? (seems fine at first blush, but asking for a friend who is less sure :)).\r\n\r\nwhat happens in the TIME_WAIT state.. retransmissions? What happens when you receive packets (ignored - trigger retrrans, RST?)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/326",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/326/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/326/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/326/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/326",
    "id": 208774850,
    "number": 326,
    "title": "Default idle timeout",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-20T03:19:39Z",
    "updated_at": "2017-02-20T03:19:39Z",
    "closed_at": null,
    "body": "The draft declares:\r\n> The default idle timeout for a QUIC connection is 30 seconds\r\n\r\nBut there are no situations in which a default is actually needed, since the parameter is mandatory to signal."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/323",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/323/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/323/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/323/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/323",
    "id": 208569921,
    "number": 323,
    "title": "Allow smaller packet number representations",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-02-17T22:02:06Z",
    "updated_at": "2017-02-21T11:43:58Z",
    "closed_at": null,
    "body": "The text currently mandates (MUST!) a 4 times safety margin against reordering when picking the packet number size.  This is purely a safety margin feature, so mandating a value isn't justified.\r\n\r\nAn implementation could, though perhaps it is unwise, use a much smaller packet number than this.  The risk is that there is reordering greater than 2^size and the packets are delivered but cannot be recovered at the receiver.  That's terrible, it will trigger loss recovery and send bad signals.  However, the protocol doesn't actually break.\r\n\r\nAt a minimum, we should make this a recommendation.  Setting a mandatory floor on the value might be reasonable, but I'd be reluctant to do that unless it was pretty low, or if the value were different for different packet number sizes (smaller margins are probably more justifiable for larger packet number encodings).\r\n\r\nIdeally, we should science this and try to measure probabilities of reordering.  Ideally reordering probability as a function of outstanding packets."
  }
,
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/311",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/311/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/311/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/311/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/311",
    "id": 207797463,
    "number": 311,
    "title": "GREASE the flags byte",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-02-15T13:00:20Z",
    "updated_at": "2017-02-20T00:43:23Z",
    "closed_at": null,
    "body": "Google-QUIC had an issue where post-handshake QUIC packets were being dropped, because a bit changed in the public flags, and a middlebox no longer identified it as QUIC.\r\n\r\nIn order to ensure the entire public flags byte is usable, I suggest we GREASE it by defining the entire space as valid.\r\n\r\nBuilding on Jana's proposal for the public header with a flags byte as a set of codepoints: https://gist.github.com/janaiyengar/b05acb3af17d6e938d25befc69c11eae\r\n\r\nThe goal is to provide a simple mathematical mapping from any value of the public flags onto a frame type.  \r\n\r\nMy suggestion is to lookup the frame type, and if it's not defined, mod the flags value by the number of frame types defined in that phase(short or long form) and pick the type with that index when ordering the frame types by value.\r\n\r\nIf an initial packet number is chosen randomly, and the connection ID is as well, greasing the flags byte and version (#112 and #296) covers everything that is not encrypted."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/310",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/310/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/310/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/310/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/310",
    "id": 207705337,
    "number": 310,
    "title": "Use packets or packet numbers in algorithms/pseudocode",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-15T04:25:25Z",
    "updated_at": "2017-02-16T03:03:32Z",
    "closed_at": null,
    "body": "The text for `DetectLostPackets` claims that `acked_packet` is a packet number, but the code shows it as having a `packet_number` field, as well as a `time_sent` field.  Maybe a TimeSent() lookup function would work, but at the level that this code operates, I think that it would be better to talk about packets in the abstract.  A real implementation might not carry around all the information a packet might accumulate, but that's for real implementations to worry about."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/309",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/309/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/309/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/309/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/309",
    "id": 207705123,
    "number": 309,
    "title": "Missing return statements",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-15T04:22:58Z",
    "updated_at": "2017-03-06T21:31:54Z",
    "closed_at": null,
    "body": "The descriptions for `OnAlarm` and `OnPacketAcked` both claim a return value.  The pseudocode doesn't show any return value."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/308",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/308/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/308/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/308/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/308",
    "id": 207682941,
    "number": 308,
    "title": "\"retransmitting\" old timestamps in ACK frames",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-15T01:12:19Z",
    "updated_at": "2017-03-06T21:32:44Z",
    "closed_at": null,
    "body": "We need to include advice on the creation of ACK frames when an ACK frame was lost.  The advice from @ianswett is that new timing information isn't valuable.  Both endpoints only need to maintain timing information for individual packets for a short period, so retransmission of old timing information isn't valuable.\r\n\r\nThus, we should recommend that endpoints do just that: maintain a short list of packets that they want to provide timing for.  They should then not worry about re-sending any timestamps from lost packets."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/307",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/307/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/307/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/307/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/307",
    "id": 207682290,
    "number": 307,
    "title": "Subsequent Delta LA values",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-15T01:07:46Z",
    "updated_at": "2017-02-15T16:10:06Z",
    "closed_at": null,
    "body": "The definition of \"Delta Last Acked\" is the same for all of the timestamp entries.  This implies that every packet number in the timestamp block is expressed relative to the \"Last Acked\".  That would make it impossible to provide timestamps for packets more than 255 packet numbers behind the last acknowledged packet and multiple ACK frames would be needed to do that.\r\n\r\nI don't think that's right, but that subsequent deltas apply to the last timestamp.  That is:\r\n```diff\r\n  packet_number[0] = last_acknowledged - delta_last[0]\r\n- packet_number[n] = last_acknowledged - delta_last[n]\r\n+ packet_number[n] = last_acknowledged - sum(1, n, delta_last[i])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/305",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/305/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/305/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/305/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/305",
    "id": 207680233,
    "number": 305,
    "title": "Packet number skipping and entropy",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-15T00:53:41Z",
    "updated_at": "2017-02-15T00:53:41Z",
    "closed_at": null,
    "body": "> skipping packet numbers between 1 and 255 effectively provides up to 8 bits of efficient entropy on  demand, which should be adequate protection against most opportunistic acknowledgement attacks.\r\n\r\nAside from the odd phrasing, I think that this is incorrect.  Aside from the obvious point that 1-255 is only  7.994 bits of entropy, you also have to take into account the probability that a sender chooses to skip (a probability of 2^-8 would give the answer here).  Add to that the fact that any entropy accumulates with every packet sent.  Choosing to send or withhold each packet number could add up to a bit of entropy over time, so the difficulty in guessing could be higher over time.\r\n\r\nNo matter what strategy it's always safe for an attacker to guess high, so the amount of effective entropy against an attacker is probably less than claimed.  Of course, guessing high has an effect on congestion control, because that is marked by the sender as loss.  That could be as effective in mitigating the optimistic acknowledgment attack as the gap itself.\r\n\r\nThen there is real packet loss.  If you randomly decide to skip 255 numbers, then real packet loss on the packet after the gap makes it difficult to acknowledge (you have to send two ACK frames if there is a gap >255).  Burst loss makes that even more likely.\r\n\r\nIn any case, I'd recommend removing any claim about entropy.  I also recommend removing any mention of specific numbers.  Skipping more packets is fine, but it means that you run the packet number space down faster and you get less efficiency in ACK packets."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/296",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/296/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/296/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/296/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/296",
    "id": 207384216,
    "number": 296,
    "title": "GREASE and Version Negotiation Hint",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-02-14T00:44:23Z",
    "updated_at": "2017-02-15T05:24:00Z",
    "closed_at": null,
    "body": "In #278, @martinthomson says that clients MAY choose a GREASE value for their initial packet to force version negotiation.  I would argue that no self-interested client will do so if the connection is latency-sensitive, since you incur an RTT, unless the spec has this at a higher level than MAY and with specific timing.\r\n\r\nHowever, for HTTP, bringing up a connection to a new Alternative is not latency-sensitive (because you still have your connection to the original host).  In the case where you're bringing up a connection to an alternative instead of to the origin, you've likely talked to the alternative before.\r\n\r\nWe could consider dropping the Alt-Svc version hint entirely, and saying that clients SHOULD open with a reserved version unless it has previously connected to the server and remembers a version list."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/295",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/295/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/295/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/295/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/295",
    "id": 207095703,
    "number": 295,
    "title": "Connection ID on a version negotiation packet",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-13T00:11:21Z",
    "updated_at": "2017-02-14T00:07:54Z",
    "closed_at": null,
    "body": "Given that we have opted to go with #119 universally, it might be reasonable to think that the server could make a proposal for the connection ID on a version negotiation packet.  However, it probably isn't a good idea.  Since version negotiation is stateless, there is less need to have stable routing for this packet.  Echoing the connection ID gives the client better assurance that its initial packet was what generated the response."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/294",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/294/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/294/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/294/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/294",
    "id": 207094918,
    "number": 294,
    "title": "Ignore version negotiation if the client version is present",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-13T00:05:26Z",
    "updated_at": "2017-02-15T05:23:23Z",
    "closed_at": null,
    "body": "That is, if the client picks X and the server returns a version negotiation packet that lists X, then something is badly wrong.  That version negotiation packet needs to be treated like internet-detritus."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/293",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/293/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/293/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/293/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/293",
    "id": 207064249,
    "number": 293,
    "title": "Does the connection id need to be in a consistent location?",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-12T17:19:51Z",
    "updated_at": "2017-02-15T05:23:04Z",
    "closed_at": null,
    "body": "@martinthomson created a header proposal that provides a fixed 8 byte connection id in a fixed location.  \r\n\r\nWe need to decide if this is a requirement or a nice to have.\r\n\r\nI haven't found any environments it needed to be in a fixed location for all packets, as long as it's easy to determine where it will be from the first byte of the packet."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/291",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/291/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/291/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/291/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/291",
    "id": 206741901,
    "number": 291,
    "title": "ACKing ACK",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-10T09:02:27Z",
    "updated_at": "2017-02-16T16:27:51Z",
    "closed_at": null,
    "body": "The text says:\r\n\r\n> However, since it is possible that an endpoint might only send packets containing ACK frames (or other non-retransmittable frames), the receiving peer MAY send an ACK frame after a reasonable number (currently 20) of such packets have been received.\r\n\r\n\"currently 20\" seems pretty arbitrary.  That smells like something from the Google QUIC implementation.  We should be more concrete about this, if that behaviour even makes sense.\r\n\r\nIf an endpoint is receiving nothing but ACKs but is sending itself, then acknowledging those ACKs is probably fine.\r\n\r\nAn endpoint with nothing to say can generate a lot of ACKs over time, but if both endpoints are being quiet other than ACKs, it's probably time to shut up entirely.  Maybe we should say that the peer SHOULD generate an ACK frame only if it has other frame types to send.\r\n\r\nLimiting the number of PING frames that a peer will respond to is a separate issue, and may motivate a limit with a number attached to it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/290",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/290/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/290/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/290/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/290",
    "id": 206738550,
    "number": 290,
    "title": "Don't haphazardly suggest retrying over TCP",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-02-10T08:43:48Z",
    "updated_at": "2017-02-16T13:44:04Z",
    "closed_at": null,
    "body": "> The application SHOULD attempt to use TLS over TCP instead.\r\n\r\n(This is in the context of finding that the MTU is too small.)\r\n\r\nThe text includes a very specific recommendation to use TLS over TCP for one particular case.  This is unwise for two reasons:\r\n1. we don't know if all protocols that build on QUIC will have a TCP over TLS option available to them; DNS over QUIC might be an example of where TLS over TCP is an inadvisable fallback option\r\n2. we should rely on a generic error handling section that includes generic advice about things like falling back to a backup protocol\r\n\r\nMarked as editorial, I hope that's not controversial."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/284",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/284/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/284/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/284/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/284",
    "id": 206725088,
    "number": 284,
    "title": "Ignoring VERSION",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-02-10T07:14:19Z",
    "updated_at": "2017-02-15T05:20:55Z",
    "closed_at": null,
    "body": "The text currently says:\r\n\r\n> Once a client receives a packet from the server with the VERSION flag unset, it MUST ignore the flag in subsequently received packets.\r\n\r\nI don't know how to interpret this.  What should a client do if it receives a packet with the VERSION flag set after completing version negotiation?  Maybe should should mandate ignoring the packet not just the flag."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/281",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/281/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/281/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/281/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/281",
    "id": 206699621,
    "number": 281,
    "title": "Promising more than the client concurrency limit",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-10T03:33:41Z",
    "updated_at": "2017-02-15T05:20:29Z",
    "closed_at": null,
    "body": "In HTTP/2, streams states were modified at the point that a PUSH_PROMISE was sent, but actually using that stream could be deferred.  The \"reserved\" state didn't count toward concurrency limit, those streams would count only when packets were first sent.\r\n\r\nIf the client had a low concurrency limit, that could mean that use of promised streams had to be deferred until active streams could be closed.  QUIC maintains a similar model, but that model is incompatible with QUIC.  In HTTP/2, any promised streams can be opened without creating any ambiguity about the state of other reserved streams.  HTTP/2 also allowed endpoints to skip stream numbers.\r\n\r\nIn QUIC the lack of ordering between streams (a feature!) forces us to insist on having a strict monotonic sequence of stream numbers.  If a stream number appears to be skipped, that is only because a packet using it has not yet arrived.  This ensures much simpler accounting for streams and avoids adding latency to stream creation.\r\n\r\nThis creates a problem for promises.  Servers cannot use streams in any order, only those streams within the window of streams permitted by the client concurrency limit are free to be used.\r\n\r\nFor example, a client could have an MSPC of 2.  That allows just one server push at a time.  A server that wants to push two resources could advertise one push on streams 4+6 and the other on 8+10.  However, unlike in HTTP/2 the server cannot start the second push first.  Opening stream 8 would imply that streams 4 and 6 are also open, violating the concurrency limit.\r\n\r\nIt's not clear that this problem needs a solution, but it is a functional regression that we should at least consider and make a conscious decision to accept."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/279",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/279/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/279/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/279/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/279",
    "id": 206591403,
    "number": 279,
    "title": "Public Flags to Aid Troubleshooting",
    "user": {
      "login": "martinduke",
      "id": 24398865,
      "avatar_url": "https://avatars1.githubusercontent.com/u/24398865?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinduke",
      "html_url": "https://github.com/martinduke",
      "followers_url": "https://api.github.com/users/martinduke/followers",
      "following_url": "https://api.github.com/users/martinduke/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinduke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinduke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinduke/subscriptions",
      "organizations_url": "https://api.github.com/users/martinduke/orgs",
      "repos_url": "https://api.github.com/users/martinduke/repos",
      "events_url": "https://api.github.com/users/martinduke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinduke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-02-09T18:35:01Z",
    "updated_at": "2017-02-10T02:37:01Z",
    "closed_at": null,
    "body": "Something that came up in Tokyo was the need for service providers (i.e. middleboxes) to troubleshoot performance issues in the network. Packet Number Echo (#269) could partially address this problem., particularly for RTT measurement. But it is imperfect for measuring other problems.\r\n\r\nAs someone who has spent quite a bit of time debugging TCP packet traces from service providers, there are two other things that would help greatly in answering the question \"why is my QUIC slow\", without significantly compromising privacy. To do both would take two bits in the public flags, which may be available depending on how some other issues turn out.\r\n\r\n(1) QUIC endpoints MAY set the BLOCKED bit if they include a BLOCKED frame in the packet. If you want to get fancy, you could have a different bit for \"stream blocked\" and \"connection blocked\", but flow control issues are a common cause of traffic pauses with no other discernable symptoms.\r\n(2) QUIC endpoints MUST (SHOULD?) set the RETRANS flag in any packet that contains retransmitted data. This would help operators identify that a connection is slowing down because it is responding to loss, and would allow for very reliable loss statistics for the downstream network."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/274",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/274/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/274/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/274/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/274",
    "id": 206346273,
    "number": 274,
    "title": "Restrict RST to data streams, require replay",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-08T22:33:40Z",
    "updated_at": "2017-03-06T20:22:45Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/274",
      "html_url": "https://github.com/quicwg/base-drafts/pull/274",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/274.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/274.patch"
    },
    "body": "Fixes #176, but I'm hoping we can find a cleaner way to do this."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/272",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/272/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/272/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/272/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/272",
    "id": 206336025,
    "number": 272,
    "title": "Signaling TLS handshake failure",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "martinthomson",
        "id": 67641,
        "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinthomson",
        "html_url": "https://github.com/martinthomson",
        "followers_url": "https://api.github.com/users/martinthomson/followers",
        "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
        "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
        "organizations_url": "https://api.github.com/users/martinthomson/orgs",
        "repos_url": "https://api.github.com/users/martinthomson/repos",
        "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/martinthomson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-08T21:52:02Z",
    "updated_at": "2017-02-15T05:17:41Z",
    "closed_at": null,
    "body": "This needs to be written down.  I think that the best outcome would be to include BOTH a TLS alert and a QUIC error code (in a CONNECTION_CLOSE frame)."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/269",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/269/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/269/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/269/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/269",
    "id": 206298017,
    "number": 269,
    "title": "Packet Number Echo in Public Header",
    "user": {
      "login": "martinduke",
      "id": 24398865,
      "avatar_url": "https://avatars1.githubusercontent.com/u/24398865?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinduke",
      "html_url": "https://github.com/martinduke",
      "followers_url": "https://api.github.com/users/martinduke/followers",
      "following_url": "https://api.github.com/users/martinduke/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinduke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinduke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinduke/subscriptions",
      "organizations_url": "https://api.github.com/users/martinduke/orgs",
      "repos_url": "https://api.github.com/users/martinduke/repos",
      "events_url": "https://api.github.com/users/martinduke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinduke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 18,
    "created_at": "2017-02-08T19:24:35Z",
    "updated_at": "2017-03-02T18:30:54Z",
    "closed_at": null,
    "body": "In Mirja's Management draft:\r\n[https://tools.ietf.org/html/draft-kuehlewind-quic-appman-00#section-3](url)\r\n\r\n> [EDITOR'S NOTE: the addition of a simple packet number echo would\r\n   allow passive RTT measurement and partial passive downstream loss/\r\n   reordering measurement.  Packet number echo can be sampled at the\r\n   echo-side (i.e. one-in-N packets or 1/p packets can carry an echo)\r\n   for efficiency tradeoff, if necessary.]\r\n\r\nI endorse this idea. Service providers are very interesting in measuring their users' quality of experience and this is one key thing we can expose to enable that. On the face of it, it seems that the privacy hit is marginal."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/267",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/267/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/267/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/267/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/267",
    "id": 206092803,
    "number": 267,
    "title": "Server enforcement of 1280 octet packet size",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-08T04:21:49Z",
    "updated_at": "2017-02-08T04:53:08Z",
    "closed_at": null,
    "body": "PR #106 added the following requirement on servers:\r\n\r\n> Servers MUST reject the first plaintext packet received from a client if it its total size is less than 1280 octets, to mitigate amplification attacks.\r\n\r\nHowever, this runs into an issue in the case where there are IP header extensions that the client knows about but the server doesn't.  If the client is aware of the IP header extensions and constructs a packet with a smaller payload in order to comply with our recommendation to create a packet of exactly 1280 octets, the server will receive a packet that it thinks is too small.\r\n\r\nI see a few options:\r\n1. loosen the enforcement constraint on the server\r\n2. specify that the server only enforce the constraint if it sees the entire IP packet\r\n3. specify the minimum size and its enforcement in terms of payload size (we could set different values here to allow for header extensions)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/265",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/265/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/265/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/265/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/265",
    "id": 205745128,
    "number": 265,
    "title": "Define source address validation in the transport",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-07T00:01:56Z",
    "updated_at": "2017-02-07T00:01:56Z",
    "closed_at": null,
    "body": "And define how it interacts with TLS, if at all."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/264",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/264/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/264/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/264/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/264",
    "id": 205744936,
    "number": 264,
    "title": "Define how source address validation interactions with TLS work",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-07T00:00:59Z",
    "updated_at": "2017-02-07T00:00:59Z",
    "closed_at": null,
    "body": "#120 almost gets there, but it needs more details on the interface."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/263",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/263/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/263/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/263/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/263",
    "id": 205406066,
    "number": 263,
    "title": "Counting closed streams against the concurrent stream limit",
    "user": {
      "login": "marten-seemann",
      "id": 1478487,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1478487?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marten-seemann",
      "html_url": "https://github.com/marten-seemann",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-05T06:43:38Z",
    "updated_at": "2017-02-07T15:52:03Z",
    "closed_at": null,
    "body": "This is an issue we briefly discussed in a coffee break in Tokyo, that nobody has written up so far.\r\n\r\nWe currently don't have a definition of the number of concurrent streams that both peers agree on at every given moment. Chrome and quic-go solve this problem by allowing a higher number of open streams (10% or 10 streams more, whichever is higher, than the advertised limit). This seems to work fine for HTTP, but will probably break down when using many short-lived streams.\r\n\r\n### Problem analysis\r\n\r\nThe main problem here is that it is very difficult for the sender to determine if the receiver considers a stream closed at any given moment. To do so, it would have to keep track of all packets containing stream data for that stream. Only when all of those packets have been ACKed (or retransmissions of those packets, if any packets were lost), it knows that the stream changed its state on the receiver's side.\r\n\r\nI think there's a more fundamental problem hidden here: Receiving a FIN should not cause a state transition in the first place. The concurrent stream limit is supposed to protect a receiver from allocating to many resources. Therefore, a stream should only be considered closed once the application finished reading from that stream (which, if it is reading the whole stream data, is only possible after receiving the FIN, but might be an arbitrary amount of time later, if the application is reading slowly).\r\n\r\n### Possible solution\r\n\r\nThere needs to be a way for the receiver to tell the sender that it considers a stream closed. We could introduce a CLOSED_STREAM frame type for that.\r\nA peer would send a CLOSED_STREAM frame only after it closed the stream locally (i.e. only from the *half closed (locally)* state) and after it finished reading from the stream. \r\nA peer receiving a CLOSED_STREAM can immediately remove the corresponding stream from the list of open streams.\r\n\r\n\r\nI can work out the details and provide a PR for this, but I'd like to discuss the proposal here first. It might make sense to finish the changes regarding the resetting of streams (related issues: #165 and #171), since this will already significantly change the stream state diagram."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/262",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/262/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/262/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/262/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/262",
    "id": 205336061,
    "number": 262,
    "title": "Don't encrypt client handshake with 1-RTT keys",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-04T09:32:15Z",
    "updated_at": "2017-02-06T23:45:53Z",
    "closed_at": null,
    "body": "As @ekr observes, this violates the rules we've agreed to for TLS, the same applies here.\r\n\r\n(This was a long and difficult conversation in TLS, we should probably just work out how to make the change.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/257",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/257/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/257/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/257/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/257",
    "id": 204869736,
    "number": 257,
    "title": "do not normatively specify application delivery order",
    "user": {
      "login": "mcmanus",
      "id": 260531,
      "avatar_url": "https://avatars2.githubusercontent.com/u/260531?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmanus",
      "html_url": "https://github.com/mcmanus",
      "followers_url": "https://api.github.com/users/mcmanus/followers",
      "following_url": "https://api.github.com/users/mcmanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmanus/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmanus/orgs",
      "repos_url": "https://api.github.com/users/mcmanus/repos",
      "events_url": "https://api.github.com/users/mcmanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-02T13:15:17Z",
    "updated_at": "2017-02-03T01:43:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/257",
      "html_url": "https://github.com/quicwg/base-drafts/pull/257",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/257.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/257.patch"
    },
    "body": "for #252 "
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/255",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/255/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/255/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/255/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/255",
    "id": 204549612,
    "number": 255,
    "title": "Line to long warnings in -recovery",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-01T10:42:51Z",
    "updated_at": "2017-02-01T23:53:23Z",
    "closed_at": null,
    "body": "> WARNING: artwork line too long: '      alarm_duration = max(1.5 * smoothed_rtt, kMinTLPTimeout) << handshake_count;' (82 characters) (at line 261)\r\nWARNING: artwork line too long: '        alarm_duration = max(kMinRTOTimeout, smoothed_rtt + 4 x rttvar);' (72 characters) (at line 261)\r\nWARNING: artwork line too long: '     # TODO: Don't remove packets immediately, since they can be used for' (73 characters) (at line 364)\r\nWARNING: artwork line too long: '           acked_packet.time_sent - kTimeReorderThreshold * smoothed_rtt):' (74 characters) (at line 404)\r\n\r\nBuild with `USE_XSLT=true` set to see these."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/253",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/253/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/253/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/253/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/253",
    "id": 204423230,
    "number": 253,
    "title": "HTTP/QUIC without Alt-Svc?",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2017-01-31T21:06:14Z",
    "updated_at": "2017-02-08T01:08:48Z",
    "closed_at": null,
    "body": "While HTTP/QUIC doesn't formally require a client to implement Alt-Svc, there's no discovery mechanism other than Alt-Svc provided, so you're not going to get very far without it.  That makes a full HTTP(/TLS)/TCP stack mandatory simply to open the connection in the first place.  For various reasons (e.g. an embedded device in a controlled environment), a client might want to dispense with TCP altogether when it knows that the endpoint will support QUIC.  It might also be useful in testing to be able to directly reference a QUIC endpoint.\r\n\r\nShould we mint new scheme(s) that allows direct reference to a resource served exclusively over HTTP/QUIC?\r\n\r\n(Note, in HTTP/2 the answer was \"no,\" because HTTP/2 could be negotiated using the same TCP connection.  QUIC doesn't have that luxury.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/252",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/252/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/252/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/252/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/252",
    "id": 204322792,
    "number": 252,
    "title": "why require in order delivery?",
    "user": {
      "login": "mcmanus",
      "id": 260531,
      "avatar_url": "https://avatars2.githubusercontent.com/u/260531?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcmanus",
      "html_url": "https://github.com/mcmanus",
      "followers_url": "https://api.github.com/users/mcmanus/followers",
      "following_url": "https://api.github.com/users/mcmanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcmanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcmanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcmanus/subscriptions",
      "organizations_url": "https://api.github.com/users/mcmanus/orgs",
      "repos_url": "https://api.github.com/users/mcmanus/repos",
      "events_url": "https://api.github.com/users/mcmanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcmanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-01-31T15:01:23Z",
    "updated_at": "2017-02-10T02:43:59Z",
    "closed_at": null,
    "body": "transport 9.4 contains: \"A receiver MUST ensure that received stream data is delivered to the application as an ordered byte-stream. Data received out of order MUST be buffered for later delivery, as long as it is not in violation of the receiver’s flow control limits.\"\r\n\r\nI agree QUIC provides an ordered byte stream abstraction, but why do we have this requirement about in-order delivery to the application? Surely that makes a lot of sense, but it seems to me the only real requirement is that it be a byte stream because boundaries are not preserved.."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/248",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/248/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/248/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/248/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/248",
    "id": 203909433,
    "number": 248,
    "title": "Exemption from congestion control",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-30T00:39:55Z",
    "updated_at": "2017-01-30T02:05:39Z",
    "closed_at": null,
    "body": "The current transport doc exempts stream 1 from *congestion control*.  That seems to be unnecessary, potentially hard to implement, and maybe even dangerous."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/245",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/245/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/245/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/245/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/245",
    "id": 203906813,
    "number": 245,
    "title": "Split headers/data streams",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-01-30T00:00:24Z",
    "updated_at": "2017-01-30T13:53:51Z",
    "closed_at": null,
    "body": "In Tokyo, we agreed that headers streams would no longer be exempt from connection-level flow control.  But the reason that headers and data streams are separate is so that one can be exempt and the other not.  So.... why are we keeping them separate again?\r\n\r\nIt might be simpler, particularly with the specter of #175 around, to bring back DATA frames and say everything's on one stream."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/244",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/244/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/244/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/244/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/244",
    "id": 203516852,
    "number": 244,
    "title": "Need a NONCE in version negotiation packets",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-26T23:11:40Z",
    "updated_at": "2017-01-30T15:45:35Z",
    "closed_at": null,
    "body": "Now that the client does not send a connection id in its version negotiation (see #119), client needs a public nonce in the packets. That prevents an off-path attacker guessing client source port and interfering with the client establishing connections with a given sever by spoofing version negotiation failure packets as if coming from that sever. That nonce should be returned by the sever in its version negotiation packets. Previously, client's connection id served such a purpose."
  }
,
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/242",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/242/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/242/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/242/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/242",
    "id": 203309349,
    "number": 242,
    "title": "HTTP extension mechanisms",
    "user": {
      "login": "LPardue",
      "id": 6571445,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6571445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LPardue",
      "html_url": "https://github.com/LPardue",
      "followers_url": "https://api.github.com/users/LPardue/followers",
      "following_url": "https://api.github.com/users/LPardue/following{/other_user}",
      "gists_url": "https://api.github.com/users/LPardue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LPardue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LPardue/subscriptions",
      "organizations_url": "https://api.github.com/users/LPardue/orgs",
      "repos_url": "https://api.github.com/users/LPardue/repos",
      "events_url": "https://api.github.com/users/LPardue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LPardue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-26T07:41:13Z",
    "updated_at": "2017-02-01T01:50:29Z",
    "closed_at": null,
    "body": "The HTTP/QUIC mapping document is missing consideration for HTTP/2 extension mechanisms. This is part of the charter text:\r\n\r\n> This mapping will accommodate the extension mechanisms defined in the HTTP/2 specification.\r\n\r\nRFC 7540 (https://tools.ietf.org/html/rfc7540#section-5.5) defines three extension mechanisms, lets order these as:\r\n\r\n1. New frame types\r\n2. New error codes\r\n3. New settings\r\n\r\nI can see how 1 and 2 might work out, following Mike's example of augmenting existing definitions and allowing for things that exist in the HTTP/2 and HTTP/QUIC spaces to be managed somewhat independently. A concrete use case I have is the ALTSVC frame (especially when used on stream 0), so I'm happy to contribute towards this issue with some guidance.\r\n\r\n3 has some problems related to proposed SETTINGS changes.\r\n\r\nFinally, extensions that could change of semantics are a bit problematic (does it change the HTTP or the QUIC semantic, if that either of those is even possible). Additionally,  the negotiation of these is trickier given the additional negotation concerns of QUIC (0-RTT etc).\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/241",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/241/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/241/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/241/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/241",
    "id": 203307509,
    "number": 241,
    "title": "What do we do if special packets are lost",
    "user": {
      "login": "siyengar",
      "id": 1054756,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1054756?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siyengar",
      "html_url": "https://github.com/siyengar",
      "followers_url": "https://api.github.com/users/siyengar/followers",
      "following_url": "https://api.github.com/users/siyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/siyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/siyengar/orgs",
      "repos_url": "https://api.github.com/users/siyengar/repos",
      "events_url": "https://api.github.com/users/siyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-26T07:26:39Z",
    "updated_at": "2017-02-03T03:00:54Z",
    "closed_at": null,
    "body": "For example if the version negotiation packet is lost, there's no ACK frame for the receiver to signal anything to the sender, we should specify what the loss recovery behavior for version negotiation and other special packets is."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/240",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/240/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/240/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/240/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/240",
    "id": 203302350,
    "number": 240,
    "title": "Avoid sending FINs on empty streams",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-26T06:41:43Z",
    "updated_at": "2017-02-08T20:12:38Z",
    "closed_at": null,
    "body": "There might be a way in which both sides of a connection could agree (by convention, protocol, or explicit signaling) that a particular stream is closed WITHOUT sending a FIN and spending the extra octets.  This could be used by HTTP to avoid the FIN that a client currently has to send when receiving a server push."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/239",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/239/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/239/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/239/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/239",
    "id": 203299320,
    "number": 239,
    "title": "Clarify how post-handshake TLS handshake messages are transmitted",
    "user": {
      "login": "vasilvv",
      "id": 123512,
      "avatar_url": "https://avatars1.githubusercontent.com/u/123512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasilvv",
      "html_url": "https://github.com/vasilvv",
      "followers_url": "https://api.github.com/users/vasilvv/followers",
      "following_url": "https://api.github.com/users/vasilvv/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasilvv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasilvv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasilvv/subscriptions",
      "organizations_url": "https://api.github.com/users/vasilvv/orgs",
      "repos_url": "https://api.github.com/users/vasilvv/repos",
      "events_url": "https://api.github.com/users/vasilvv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasilvv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-26T06:14:16Z",
    "updated_at": "2017-02-03T03:01:28Z",
    "closed_at": null,
    "body": "My understanding of the way the mechanism is supposed to work is that once the handshake is finished, QUIC takes over the encryption;  if server wants to send an NST, it needs to send it on stream 1, using TLS record layer on said stream, and said TLS record shall not be encrypted.  If that is so, this should be clarified, because otherwise this can be interpreted as a requirement to double-encrypt streams (on QUIC packet layer with QUIC key, and on TLS record layer with TLS traffic keys)."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/238",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/238/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/238/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/238/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/238",
    "id": 203289453,
    "number": 238,
    "title": "Memory commitment for header parsing",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-26T04:17:41Z",
    "updated_at": "2017-01-26T04:17:41Z",
    "closed_at": null,
    "body": "Parsing all possible header blocks could require a significant number of header parsers operating concurrently.  Since headers tend to be delivered as a single package to applications, that means that the parsers need sufficient space to hold all the partially complete data.\r\n\r\nThis can be addressed by only reading from the streams that an endpoint is able to, but that increases complexity and exposure to head-of-line blocking.\r\n\r\nThis cleaves off the second part of #204."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/237",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/237/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/237/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/237/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/237",
    "id": 203288601,
    "number": 237,
    "title": "Create a firm recommendation on when to send WINDOW_UPDATE",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-26T04:07:56Z",
    "updated_at": "2017-01-26T04:11:47Z",
    "closed_at": null,
    "body": "@ianswett says that we need a hard line recommendation on when a WINDOW_UPDATE is required.  He suggests that once you get to 1/3 of the space you have allocated to flow control remaining, you SHOULD send a WINDOW_UPDATE along with the next ACK."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/233",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/233/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/233/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/233/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/233",
    "id": 203250449,
    "number": 233,
    "title": "Unknown frame types",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-25T23:11:39Z",
    "updated_at": "2017-01-25T23:17:08Z",
    "closed_at": null,
    "body": "The draft currently says:\r\n\r\n> Frames of unknown types are ignored.\r\n\r\nWhich is basically impossible. The only option an endpoint has when it encounters an unknown frame type is to throw out the entire frame or terminate the connection.  We should pick the latter."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/232",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/232/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/232/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/232/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/232",
    "id": 203035987,
    "number": 232,
    "title": "New connection ID message",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-25T08:02:34Z",
    "updated_at": "2017-01-25T08:02:34Z",
    "closed_at": null,
    "body": "In order to break linkability across events that are known to an endpoint, we should explore the possibility of having each endpoint provide the other with a new connection identifier AND a number of packet numbers that should be skipped.  This allows an endpoint to continue using the same connection on a new path without linking use of that new path to use of the old path.\r\n\r\nYou need to change connection ID and packet numbers or they can be used for linking.  That doesn't preclude the use of other signals for linking, but it removes obvious ones.\r\n\r\nThis wouldn't address all of the potential linkability issues we identified, but would help in cases where an endpoint is aware of the need - or even potential need - for a gap in linkability."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/231",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/231/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/231/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/231/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/231",
    "id": 203033872,
    "number": 231,
    "title": "Consider encrypting the packet number",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-25T07:47:46Z",
    "updated_at": "2017-01-31T06:46:27Z",
    "closed_at": null,
    "body": "Quoting myself from the mailing list:\r\n\r\nTL;DR. Encrypt the packet number with ECB or something like it. This\r\nis probably a bad idea but I wanted to write it down.\r\n\r\nI had an idea last night about encrypting the packet number. Here's\r\na diagram of a QUIC regular packet:\r\n\r\n ```  +-+-+-+-+-+-+-+-+\r\n   |   Flags (8)   |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                                                               |\r\n   +                     [Connection ID (64)]                      +\r\n   |                                                               |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                        [Version (32)]                         |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ \r\n   |                  Packet Number (8/16/32/48)                 ...\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                    {Encrypted Payload (*)}                  ...\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   ```\r\nThe insight here is that the reason that the packet number is outside\r\nof the encryption is because it is used as the nonce for the AEAD\r\nfunction. However, there are encryption algorithms (which we usually\r\navoid for various reasons) which do not need a nonce. Specifically,\r\nwhat we could do is derive two keys:\r\n\r\n  K_h: header encryption\r\n  K_p: packet encryption\r\n\r\n\r\nSo you get:\r\n\r\n ```\r\n  +-+-+-+-+-+-+-+-+\r\n   |   Flags (8)   |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                                                               |\r\n   +                     [Connection ID (64)]                      +\r\n   |                                                               |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                        [Version (32)]                         |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ^ \r\n   |                 {Packet Number (8/16/32/48)}                ... | encrypted with K_h\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ v\r\n   |                    {Encrypted Payload (*)}                  ... ^\r\n   |                                                                 | encrypted with K_p\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ v\r\n```\r\n\r\nThis of course leaves the question of which crypto mode you use to encrypt\r\nthe packet number. The natural choice is ECB, but that only works with\r\ndata values the same size as the cipher block, which for AES is much\r\nbigger than the packet number (128 bits). So, that's waste, though you\r\nmight of course add stuff to the block if we had other headers.\r\nWe could use 3DES (which has a 64-bit block) or FFX (which can be used\r\nwith any block size, but at some additional computational cost).\r\n\r\nTwo pre-emptive responses to common questions:\r\n\r\n1. Yes, ECB and FFX are not generally as good as AEAD algorithms, in\r\nparticular because they don't have integrity and they reveal patterns\r\nin the plaintext. However, this is data which would (a) otherwise be in the\r\nclear and (b) is folded into the ordinary AEAD integrity check.\r\n\r\n2. As long as we correctly generate K_h and K_p independently using\r\na KDF, then any weaknesses in K_h don't implicate K_p.\r\n\r\nAgain, this probably isn't worth doing with the current amount of\r\nstuff in the headers, but I wanted to write it down so that people would\r\nknow about it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/230",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/230/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/230/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/230/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/230",
    "id": 203027786,
    "number": 230,
    "title": "Given recommendations on when/how often to send ACK frames",
    "user": {
      "login": "mirjak",
      "id": 8420764,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8420764?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mirjak",
      "html_url": "https://github.com/mirjak",
      "followers_url": "https://api.github.com/users/mirjak/followers",
      "following_url": "https://api.github.com/users/mirjak/following{/other_user}",
      "gists_url": "https://api.github.com/users/mirjak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mirjak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mirjak/subscriptions",
      "organizations_url": "https://api.github.com/users/mirjak/orgs",
      "repos_url": "https://api.github.com/users/mirjak/repos",
      "events_url": "https://api.github.com/users/mirjak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mirjak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-25T07:03:42Z",
    "updated_at": "2017-03-02T22:29:49Z",
    "closed_at": null,
    "body": "The spec just doesn't say anything about this so far. You at least want to put in some minumum requirement (like MUST send at least X ACKs per RTT).\r\n\r\nAlso related but might be a separate issue that I'm not sure about yet: Is there a value in having a mechanism for the sender to tell the receiver how often it would like to receive ACKs?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/228",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/228/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/228/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/228/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/228",
    "id": 203014840,
    "number": 228,
    "title": "HPACK relies on in-order delivery",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-25T05:15:45Z",
    "updated_at": "2017-03-06T23:46:21Z",
    "closed_at": null,
    "body": "QUIC doesn't make order guarantees between streams.  The options on the table currently are:\r\n\r\n- Current (-01) draft puts a sequence number in the frames; HPACK data MUST be handled in order, and will HOL-block.  HPACK is exactly the same as HTTP/2.\r\n- Buck's proposal (draft forthcoming) puts two sequence numbers in the frames and modifies the HPACK encoder to prevent blocking references.  Partially-received HPACK frames must block until fully received.  The new encoder could also be used in HTTP/2, but would require changes to existing code.\r\n- [QPACK](https://tools.ietf.org/html/draft-bishop-quic-http-and-qpack) modifies HPACK to be order-resilient and permit partial frames to be processed, but breaks from the HPACK encoding enough that you'd have at least some separate code paths.\r\n\r\nAlso agreed to put a \"hard-hat warning\" in this section of the HTTP draft, to warn readers this is still work-in-progress."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/227",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/227/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/227/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/227/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/227",
    "id": 202994101,
    "number": 227,
    "title": "Encrypt the initial cleartext packets with a deterministic key",
    "user": {
      "login": "lucas-clemente",
      "id": 918034,
      "avatar_url": "https://avatars2.githubusercontent.com/u/918034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucas-clemente",
      "html_url": "https://github.com/lucas-clemente",
      "followers_url": "https://api.github.com/users/lucas-clemente/followers",
      "following_url": "https://api.github.com/users/lucas-clemente/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucas-clemente/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucas-clemente/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucas-clemente/subscriptions",
      "organizations_url": "https://api.github.com/users/lucas-clemente/orgs",
      "repos_url": "https://api.github.com/users/lucas-clemente/repos",
      "events_url": "https://api.github.com/users/lucas-clemente/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucas-clemente/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-25T02:05:20Z",
    "updated_at": "2017-01-25T04:43:48Z",
    "closed_at": null,
    "body": "This is an alternative to #167: We could just encrypt the cleartext data in the initial handshake packets with a deterministic key (e.g. a mixture of a version-dependent key and the initial packet number). The AEAD used there would have to be fixed in the spec.\r\n\r\nThe goal would be to make it harder for middleboxes to ossify on stuff in the client hello, e.g. SNI, and to detect initial packets (#203). On the other hand, there's additional computational cost for decrypting packets server-side."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/224",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/224/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/224/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/224/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/224",
    "id": 202985261,
    "number": 224,
    "title": "Require that ClientHello fit in a single packet",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-25T00:59:17Z",
    "updated_at": "2017-01-25T00:59:17Z",
    "closed_at": null,
    "body": "We've assumed that this is the case, but we really need to write it down."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/222",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/222/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/222/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/222/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/222",
    "id": 202982728,
    "number": 222,
    "title": "Re-use of PSK",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-25T00:41:56Z",
    "updated_at": "2017-01-25T02:22:52Z",
    "closed_at": null,
    "body": "S 8.3 says:\r\n```\r\nA source address token is opaque and consumed only by the server.  Therefore it\r\ncan be included in the TLS 1.3 pre-shared key identifier for 0-RTT handshakes.\r\nServers that use 0-RTT are advised to provide new pre-shared key identifiers\r\nafter every handshake to avoid linkability of connections by passive observers.\r\nClients MUST use a new pre-shared key identifier for every connection that they\r\ninitiate; if no pre-shared key identifier is available, then resumption is not\r\npossible.\r\n```\r\n\r\nThis seem like an unnecessary requirement. Reusing the same PSK ID seems fine here."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/221",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/221/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/221/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/221/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/221",
    "id": 202982274,
    "number": 221,
    "title": "ISSUE in the TLS draft",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-25T00:38:43Z",
    "updated_at": "2017-01-25T04:22:50Z",
    "closed_at": null,
    "body": "The quic-tls draft says:\r\n\r\n```\r\n  What about 0-RTT data?  Should we allow acknowledgment of 0-RTT with\r\n  unprotected frames?  If we don't, then 0-RTT data will be unacknowledged until\r\n  the handshake completes.  This isn't a problem if the handshake completes\r\n  without loss, but it could mean that 0-RTT stalls when a handshake packet\r\n  disappears for any reason.\r\n```\r\n\r\nI assume what you're talking about here is the case where the server's first flight of packets are lost, because the server can only find itself in one of two positions because the CH must fit in a single packet.\r\n\r\n- It has no ClientHello, in which case it must buffer any packets\r\n- It has a ClientHello, in which case it can can complete the handshake by sending its first flight.\r\n\r\nMy sense is that having stalling of 0-RTT in the case where parts of the server's first flight are lost is not that big a deal. If you really don't want stalling, you should retransmit faster :)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/219",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/219/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/219/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/219/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/219",
    "id": 202739381,
    "number": 219,
    "title": "Introduce a mechanism to increase initial flow control window for streams",
    "user": {
      "login": "vasilvv",
      "id": 123512,
      "avatar_url": "https://avatars1.githubusercontent.com/u/123512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasilvv",
      "html_url": "https://github.com/vasilvv",
      "followers_url": "https://api.github.com/users/vasilvv/followers",
      "following_url": "https://api.github.com/users/vasilvv/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasilvv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasilvv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasilvv/subscriptions",
      "organizations_url": "https://api.github.com/users/vasilvv/orgs",
      "repos_url": "https://api.github.com/users/vasilvv/repos",
      "events_url": "https://api.github.com/users/vasilvv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasilvv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-24T06:54:24Z",
    "updated_at": "2017-01-24T23:45:10Z",
    "closed_at": null,
    "body": "It may be desirable for the client to increase the flow control window mid-connection (it observes that client actually has very high BDP; it decides based on application request by peer that it will send a lot of data; it decides that it trusts the peer for some reason; potentially other options).  Currently, we can bump connection flow control window without an issue, but any new individual streams are stuck with whatever was initially negotiated.  We may want to add a mechanism to increase initial stream flow control window mid-connection."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/217",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/217/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/217/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/217/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/217",
    "id": 202727735,
    "number": 217,
    "title": "Packet reordering / loss distorts open stream limits",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-24T05:23:15Z",
    "updated_at": "2017-01-24T23:34:14Z",
    "closed_at": null,
    "body": "For illustrative purposes, consider a server with an max open stream limit of 2.  The client sends packets with frames in the following order:\r\n\r\n1. Open stream 3\r\n2. Open stream 5\r\n3. Close stream 5\r\n4. Open stream 7\r\n\r\nThe network reorders packets 3 and 4. From the server's perspective, the client has violated the maximum.  In order to deal with this, the server will presumably need something more complicated than just \"if violated, kill\" -- maybe kill the connection if it *remains* violated for more than 1-2 RTT?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/215",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/215/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/215/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/215/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/215",
    "id": 202708182,
    "number": 215,
    "title": "Design public reset",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-24T02:26:39Z",
    "updated_at": "2017-01-25T04:24:39Z",
    "closed_at": null,
    "body": "There is some sadness about public reset. See PR #20"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/211",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/211/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/211/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/211/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/211",
    "id": 202700614,
    "number": 211,
    "title": "Narrow the error code space",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-24T01:29:57Z",
    "updated_at": "2017-01-24T01:29:57Z",
    "closed_at": null,
    "body": "There are LOTS of error codes.  The only sensible thing to do is use those code to steer the receiver in the direction of the right logic for recovering from the error.  There is a different piece of information that might be provided to an application for diagnostic purposes (the reason phrase helps if it goes across the wire) and there might be other needs for an API, but across the wire we can probably cut this down a lot."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/210",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/210/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/210/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/210/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/210",
    "id": 202699779,
    "number": 210,
    "title": "What's the general strategy for QUIC extensibility?",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-24T01:23:53Z",
    "updated_at": "2017-01-24T07:28:47Z",
    "closed_at": null,
    "body": "- Version negotiation \r\n- Options negotiation\r\n\r\nThe document needs to define a general strategy for this. I see there are other related issues, but none that quite covers the general issue.\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/209",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/209/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/209/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/209/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/209",
    "id": 202696119,
    "number": 209,
    "title": "Fix stream identifier size",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-24T00:59:08Z",
    "updated_at": "2017-01-24T01:03:57Z",
    "closed_at": null,
    "body": "The doc defines stream identifiers as \"variable-length\".  But are they really?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/205",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/205/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/205/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/205/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/205",
    "id": 202551824,
    "number": 205,
    "title": "Variable-length connectionID/routing information in public header",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-01-23T14:42:13Z",
    "updated_at": "2017-01-25T00:29:17Z",
    "closed_at": null,
    "body": "This issue directly applies to the use of Server Proposed Connection ID (issue #119) / Stateless Rejects (issue #60).\r\n\r\n\"Origin servers\" are often complex multi-server data centers with load balancers. Some \"origin servers\" are actually globally distributed load balancing and routing systems, possibly with multiple levels of load balancing (for example global and local).  Since packets may show up at any load balancer node (both for global and local load balancers), it is very difficult (if not prohibitive) for these load balancers to keep track of the load balancing decision for each active connection and share that state among all nodes.\r\n\r\nTo enable stateless load balancing, load balancers need every packet to include routing information for its connection. Server Proposed Connection ID (#119) with Stateless Rejects (#60) are the methods of choice, as they allow the \"origin server system\" to encode some information into the ConnectionID -- a part of the public header present in every packet.  However, depending on the complexity of the encoded routing information, 64 bits may not be enough to ensure a sufficient amount of entropy in the ConnectionID.\r\n\r\nThe proposal is to allow Server Proposed Connection ID to include additional information to be present in every packet. That additional information can take a form of an optional longer Connection ID (and therefore be immutable) or be a new mutable part of the public header."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/203",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/203/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/203/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/203/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/203",
    "id": 202476918,
    "number": 203,
    "title": "Connection migration should be indistinguishable from a new connection",
    "user": {
      "login": "lucas-clemente",
      "id": 918034,
      "avatar_url": "https://avatars2.githubusercontent.com/u/918034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucas-clemente",
      "html_url": "https://github.com/lucas-clemente",
      "followers_url": "https://api.github.com/users/lucas-clemente/followers",
      "following_url": "https://api.github.com/users/lucas-clemente/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucas-clemente/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucas-clemente/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucas-clemente/subscriptions",
      "organizations_url": "https://api.github.com/users/lucas-clemente/orgs",
      "repos_url": "https://api.github.com/users/lucas-clemente/repos",
      "events_url": "https://api.github.com/users/lucas-clemente/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucas-clemente/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-23T08:58:37Z",
    "updated_at": "2017-01-25T00:30:26Z",
    "closed_at": null,
    "body": "One of the major features of QUIC vs TCP is the option of seamless connection migration. One can conceive of a situation where a network middle-man (e.g. an ISP, firewall implementer, etc) might have an interest in blocking this feature, e.g. by detecting connection migrations to their network and dropping those packets. I propose that we think of a way to make a connection migration indistinguishable from a \"normal\" new connection.\r\n\r\nOne solution I can think of would be to have the client send a \"fake\" initial packet with 0-RTT encryption (which would then be discarded by the server as undecryptable). The first few packets sent on the new address would also need to have the version bit set – which the server would have to ignore.\r\n\r\nThis would also require initial packet number randomization (see #35).\r\n\r\nThis issue might conflict somewhat with #185.\r\n\r\nThanks to @lcolitti for pointing this issue out."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/200",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/200/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/200/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/200/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/200",
    "id": 202447604,
    "number": 200,
    "title": "Race condition between stream creation and MSPC",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-23T05:13:53Z",
    "updated_at": "2017-01-24T03:59:20Z",
    "closed_at": null,
    "body": "Consider the following sequence of events on a stream (assuming that MSPC allows exactly one application data stream in the C-S direction:\r\n\r\n```\r\n<---------- Stream Establishment ----------->\r\n<----------------------------------------- FIN\r\nFIN ----------------------------------------->\r\nDATA (stream N+1) -------------------------->\r\n```\r\n\r\nIf you get reordering between the FIN and the data then the server will see it as exceeding MSPC and send  QUIC_TOO_MANY_OPEN_STREAMS. Ugh."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/199",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/199/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/199/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/199/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/199",
    "id": 202446349,
    "number": 199,
    "title": "Why are reason phrases potentially 65k long?",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-23T04:58:46Z",
    "updated_at": "2017-01-24T02:45:11Z",
    "closed_at": null,
    "body": "There is a two byte length field. Surely a 256-byte reason phrase is long enough.\r\n\r\nAlso, are these in ASCII? UTF-8?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/198",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/198/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/198/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/198/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/198",
    "id": 202446213,
    "number": 198,
    "title": "Need guidance on how often to send BLOCKED ",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-23T04:57:22Z",
    "updated_at": "2017-01-24T03:40:57Z",
    "closed_at": null,
    "body": "The present text strongly suggests that I should be sending blocked every time I get new data:\r\n\r\n  A sender sends a BLOCKED frame (type=0x05) when it is ready to send\r\n   data (and has data to send), but is currently flow control blocked.\r\n\r\nIf the idea is that it should be edge triggered rather than level triggered, the text should say so\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/197",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/197/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/197/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/197/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/197",
    "id": 202445957,
    "number": 197,
    "title": "Move padding to the crypto layer",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-01-23T04:54:19Z",
    "updated_at": "2017-01-24T01:38:48Z",
    "closed_at": null,
    "body": "I think it would be good to make padding the responsibility of the crypto layer. TLS already has a reasonable padding scheme which we can just steal here."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/196",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/196/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/196/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/196/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/196",
    "id": 202445623,
    "number": 196,
    "title": "Don't resend *all* packets in version negotiation",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-23T04:50:38Z",
    "updated_at": "2017-01-24T13:26:05Z",
    "closed_at": null,
    "body": "\"\r\n   When the client receives a Version Negotiation packet from the\r\n   server, it should select an acceptable protocol version.  If the\r\n   server lists an acceptable version, the client selects that version\r\n   and resends all packets using that version.  The resent packets MUST\r\n   use new packet numbers.  These packets MUST continue to have the\r\n   VERSION flag set and MUST include the new negotiated protocol\r\n   version.\"\r\n\r\nThere might be some packets which should not be re-sent if, for instance, they are not relevant for this version of QUIC"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/194",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/194/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/194/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/194/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/194",
    "id": 202445218,
    "number": 194,
    "title": "Frames should have a length field",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-23T04:45:37Z",
    "updated_at": "2017-01-25T05:35:30Z",
    "closed_at": null,
    "body": "In S 5.2.2 QUIC frames are currently specified without any length field. This means that it's not possible to skip over unknown frame types.\r\n\r\nThere are at least two reasons why this is inconvenient:\r\n\r\n- It makes it hard to write passive analysis tools because those tools will just choke if they encounter unrecognized frames (they cannot process the rest of the packet).\r\n- It makes it hard to skip over frames you don't care about without parsing them. BLOCKED is a good example of such a frame currently"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/193",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/193/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/193/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/193/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/193",
    "id": 202444897,
    "number": 193,
    "title": "Flags section is kind of confusing",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ekr",
        "id": 1111457,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ekr",
        "html_url": "https://github.com/ekr",
        "followers_url": "https://api.github.com/users/ekr/followers",
        "following_url": "https://api.github.com/users/ekr/following{/other_user}",
        "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
        "organizations_url": "https://api.github.com/users/ekr/orgs",
        "repos_url": "https://api.github.com/users/ekr/repos",
        "events_url": "https://api.github.com/users/ekr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ekr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-23T04:41:51Z",
    "updated_at": "2017-01-24T01:30:41Z",
    "closed_at": null,
    "body": "The formatting of the flags word section is kind of confusing. Rather than presenting things as hex, I think I would just do a bit diagram like in other flags sections. I can provide a PR if the editors want.\r\n\r\n"
  }
,
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/192",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/192/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/192/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/192/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/192",
    "id": 202444139,
    "number": 192,
    "title": "Stop pretending we are going to get to a 64-bit packet number",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-23T04:32:29Z",
    "updated_at": "2017-01-24T04:29:04Z",
    "closed_at": null,
    "body": "S 5.2.1 contains a bunch of instructions for how to deal with packet number 2^64 but (for instance) the connection flow control window is 64-bits in absolute values, so given that we're mostly sending data, it seems improbable you will get to 2^64 packets."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/188",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/188/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/188/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/188/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/188",
    "id": 202284059,
    "number": 188,
    "title": "Receiving WINDOW_UPDATE before the first STREAM frame should not reset connections",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-21T02:20:49Z",
    "updated_at": "2017-01-24T00:55:49Z",
    "closed_at": null,
    "body": "> **9.1.1. idle**\r\nAll streams start in the “idle” state.\r\n...\r\nReceiving any frame other than STREAM or RST_STREAM on a stream in this state MUST be treated as a connection error (Section 11) of type YYYY.\r\n\r\nReceiving a WINDOW_UPDATE frame (or probably any other frame) for a stream before the first STREAM frame for that stream due to packet reordering/loss should not be treated as a connection error (causing a connection reset)."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/187",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/187/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/187/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/187/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/187",
    "id": 202283383,
    "number": 187,
    "title": "\"Reason Phrase\" in CONNECTION_CLOSE and GOAWAY frames",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-21T02:11:41Z",
    "updated_at": "2017-01-24T00:59:21Z",
    "closed_at": null,
    "body": "The inclusion of \"Reason Phrase\" is CONNECTION_CLOSE and GOAWAY frames seems unnecessary and its normative usage uncertain. There is already an error code field (and a robust discussion in #19 and #184 about its values).\r\n\r\n\"Reason Phrase\" seems like optional textual debug information (in what language?). This is actually another case for a generalized DEBUG frame (see #65)."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/186",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/186/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/186/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/186/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/186",
    "id": 202282511,
    "number": 186,
    "title": "Minimum concurrent stream value",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-21T01:58:59Z",
    "updated_at": "2017-01-24T01:03:19Z",
    "closed_at": null,
    "body": "The specification allows endpoints to specify the maximum number of concurrent streams (MSPC), but should not the spec provide for the minimum value of MSPC that all endpoints must support?  If the minimum is 1 (excluding \"service\" streams), it would be good for the spec to state so explicitly."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/185",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/185/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/185/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/185/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/185",
    "id": 202271417,
    "number": 185,
    "title": "Reliable identification of the initial packet for a connection",
    "user": {
      "login": "igorlord",
      "id": 25256216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25256216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorlord",
      "html_url": "https://github.com/igorlord",
      "followers_url": "https://api.github.com/users/igorlord/followers",
      "following_url": "https://api.github.com/users/igorlord/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorlord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorlord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorlord/subscriptions",
      "organizations_url": "https://api.github.com/users/igorlord/orgs",
      "repos_url": "https://api.github.com/users/igorlord/repos",
      "events_url": "https://api.github.com/users/igorlord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorlord/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-01-20T23:57:27Z",
    "updated_at": "2017-02-11T01:59:53Z",
    "closed_at": null,
    "body": "Some path elements may need to statelessly identify an initial packet of a connection. These path elements could include load balancers and organization's border security systems.  Ability to identify the initial packet may also be required for systems implementing Stateless Rejects #60.\r\n\r\nSince QUIC allows for packet number truncation, the most straightforward way to identify the initial packet is by checking for packet number 1 and VERSION flag set.\r\n\r\nHence:\r\n\r\n- The language of section 6.1 Version Negotiation would need to change SHOULD to MUST in \"All subsequent packets sent by the client SHOULD have the VERSION flag unset\".\r\n- Section 6.1 Version Negotiation should also gain language like: \"If Version negotiation is not complete in 2^6 packets, any endpoint MAY reset this connection\".  (This is a weaker statement than #143.)\r\n- Proposal in issue #35 is not compatible with this issue. If packet numbers are allowed to be deliberately skipped, we should require that packets with VERSION set MUST NOT be skipped."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/184",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/184/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/184/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/184/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/184",
    "id": 202178212,
    "number": 184,
    "title": "Classify what frames may use which error codes",
    "user": {
      "login": "LPardue",
      "id": 6571445,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6571445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LPardue",
      "html_url": "https://github.com/LPardue",
      "followers_url": "https://api.github.com/users/LPardue/followers",
      "following_url": "https://api.github.com/users/LPardue/following{/other_user}",
      "gists_url": "https://api.github.com/users/LPardue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LPardue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LPardue/subscriptions",
      "organizations_url": "https://api.github.com/users/LPardue/orgs",
      "repos_url": "https://api.github.com/users/LPardue/repos",
      "events_url": "https://api.github.com/users/LPardue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LPardue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-20T16:08:39Z",
    "updated_at": "2017-02-08T19:47:58Z",
    "closed_at": null,
    "body": "QUIC-TRANSPORT defines the syntax of QUIC error codes and defines some values for the QUIC transport. The section says:\r\n\r\n> This section lists the defined QUIC transport error codes that may be used in a CONNECTION_CLOSE or RST_STREAM frame. Error codes share a common code space. Some error codes apply only to either streams or the entire connection and have no defined semantics in the other context.\r\n\r\nSince the error space is shared, it is not clear what error codes are appropriate to use with which frame types. There is the possibility for endpoints to send a semantically incorrect error code in a frame. How should a receiver handle such an occurrence?\r\n\r\nThis possibility exists only for the Application-specific, QUIC transport or Cryptographic error codes. Host-local error codes must not be sent.  \r\n\r\nAs an example, an client sends a `RST_STREAM` frame with the error code `QUIC_TOO_MANY_SESSIONS_ON_SERVER`.  Is this actually allowed and what should the server do (close the connection, igore it, ...)?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/183",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/183/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/183/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/183/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/183",
    "id": 202074494,
    "number": 183,
    "title": "Abstraction of TLS",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-20T07:47:21Z",
    "updated_at": "2017-02-21T23:39:08Z",
    "closed_at": null,
    "body": "The question is whether we maintain TLS as some abstract concept or not.\r\n\r\nWe could talk about \"the cryptographic handshake\" and features that it provides in the abstract when referring to them in the transport document.  Or we could just describe how this protocol works in concrete terms.\r\n\r\nProponents of the first seem to think that would make replacing TLS easier.  Others disagree.  Others think that replacing TLS would be a bad idea.  Others think that replacing TLS is the only rational choice.  Some people think that people who hold opposing opinions are completely nuts."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/179",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/179/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/179/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/179/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/179",
    "id": 201887168,
    "number": 179,
    "title": "Text for \"half-closed (remote)\"",
    "user": {
      "login": "ddragana",
      "id": 10529034,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10529034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddragana",
      "html_url": "https://github.com/ddragana",
      "followers_url": "https://api.github.com/users/ddragana/followers",
      "following_url": "https://api.github.com/users/ddragana/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddragana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddragana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddragana/subscriptions",
      "organizations_url": "https://api.github.com/users/ddragana/orgs",
      "repos_url": "https://api.github.com/users/ddragana/repos",
      "events_url": "https://api.github.com/users/ddragana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddragana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-19T15:13:45Z",
    "updated_at": "2017-01-19T23:14:00Z",
    "closed_at": null,
    "body": "> A stream that is \"half-closed (remote)\" is no longer being used by\r\n>    the peer to send any data.  In this state, a sender is no longer\r\n>    obligated to maintain a receiver stream-level flow-control window.\r\n> \r\n>    If an endpoint receives any STREAM frames for a stream that is in\r\n>    this state, it MUST close the connection with a\r\n>    QUIC_STREAM_DATA_AFTER_TERMINATION error (Section 11).\r\n\r\nIf a packet sent before the packet with FIN bit set gets lost and is retransmitted is going to cause close of the connection.\r\nThe text needs to change to say if a frame with offset  larger than the offset + size of the frame with FIN bit set is received. (or a better wording)\r\n\r\n(An editorial remark: In the \"Lifecycle of a stream\" diagram going from \"half-closed(remote)\" to \"closed\" should be cause by \"send FIN\" not \"recv FIN\" and from \"half-closed(local)\" to \"closed\" should be cause by \"recv FIN\")\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/178",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/178/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/178/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/178/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/178",
    "id": 201837364,
    "number": 178,
    "title": "Editorial issue with STOP_WAITING",
    "user": {
      "login": "ddragana",
      "id": 10529034,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10529034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddragana",
      "html_url": "https://github.com/ddragana",
      "followers_url": "https://api.github.com/users/ddragana/followers",
      "following_url": "https://api.github.com/users/ddragana/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddragana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddragana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddragana/subscriptions",
      "organizations_url": "https://api.github.com/users/ddragana/orgs",
      "repos_url": "https://api.github.com/users/ddragana/repos",
      "events_url": "https://api.github.com/users/ddragana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddragana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-19T11:44:21Z",
    "updated_at": "2017-02-22T22:14:30Z",
    "closed_at": null,
    "body": "In Section 7.3 (STOP_WAITING Frame), Least Unacked Delta is calculated using the packet ID of the packet carrying the STOP_WAITING frame. This is reasonable. \r\n\r\nIn the ACK Frame section:\r\n\r\n> An endpoint SHOULD use the \"Largest Acked\" packet number it received to calculate the \"Least Unacked Delta\" value in any STOP_WAITING frame it might send.\r\n\r\nMaybe I understood it wrong but it suggest to calculate Least Unacked Delta using \"Largest Acked\".\r\nThis should be written in a different way if it meant that the information from an ack (not only \"Largest Acked\" but also unacked gaps ) is used to decide to send a STOP_WAITING frame."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/177",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/177/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/177/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/177/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/177",
    "id": 201834068,
    "number": 177,
    "title": "Reliable transmission of CONNECTION_CLOSE",
    "user": {
      "login": "ddragana",
      "id": 10529034,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10529034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddragana",
      "html_url": "https://github.com/ddragana",
      "followers_url": "https://api.github.com/users/ddragana/followers",
      "following_url": "https://api.github.com/users/ddragana/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddragana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddragana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddragana/subscriptions",
      "organizations_url": "https://api.github.com/users/ddragana/orgs",
      "repos_url": "https://api.github.com/users/ddragana/repos",
      "events_url": "https://api.github.com/users/ddragana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddragana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-19T11:30:08Z",
    "updated_at": "2017-01-24T06:11:08Z",
    "closed_at": null,
    "body": ">  If the total number of packets transmitted in this connection reaches 2^64 - 1, the sender MUST close the connection by sending a CONNECTION_CLOSE frame with the error code QUIC_SEQUENCE_NUMBER_LIMIT_REACHED\r\n\r\nIf this packet is lost there is not packet number available for its retransmission. CONNECTION_CLOSE should be reliably transmitted."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/176",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/176/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/176/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/176/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/176",
    "id": 201776330,
    "number": 176,
    "title": "RST_STREAM breaks HPACK",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2017-01-19T06:36:19Z",
    "updated_at": "2017-01-23T21:31:40Z",
    "closed_at": null,
    "body": "@martinthomson noticed an issue in the QPACK draft that's equally true with HPACK in -01:\r\n\r\nIf you RST_STREAM a stream with a missing QUIC STREAM frame that contains an HPACK frame (HEADERS, PUSH_PROMISE), that missing frame never gets retransmitted.  That, in turn, means that no future HPACK frame can be interpreted, ever, because you're missing part of your history.\r\n\r\nOops.\r\n\r\nMy first inclination is to change the HTTP draft to say that message control streams MUST NOT be reset.  If you don't want the message body, reset the data stream, but you MUST read the message headers.  If, for some reason, you cannot do so, then terminate the connection.\r\n\r\nAnyone see a barrier to that (other than the price of ginormous headers)?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/175",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/175/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/175/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/175/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/175",
    "id": 201719775,
    "number": 175,
    "title": "Unidirectional streams",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2017-01-18T23:12:28Z",
    "updated_at": "2017-03-05T22:32:21Z",
    "closed_at": null,
    "body": "QUIC borrows the HTTP/2 state machine, or tries to replicate it as much as it can.  Part of that replication is the idea that a stream is bidirectional.  The state related to outgoing data and the state related to inbound data are tied.\r\n\r\n#174 suggests a simplification that could open up a more dramatic simplification: independent state for each direction.  #171 moves in that direction also.\r\n\r\nThe state machine that results from that is dramatically simpler: idle -> open -> closed.  That is, before packets, packets and after packets.\r\n\r\nThe consequence for the HTTP mapping is largely that it needs a different method for correlating request and response.\r\n\r\n## Correlating request and response\r\n\r\nCurrently, request and response are correlated by matching the stream identifier.  However, unidirectional streams would allow for cases where streams are not created symmetrically.  For instance, server push would only require streams from the server.  Similarly, the server would not be obligated to respond to requests in the order in which they were received (if at all, since it could reset request streams).\r\n\r\nThat implies that this would add a requirement for the server to identify which request a given stream is answering.  This is an extension of the requirement in #174, which only required that the server identify a push promise (actually, it's less onerous, because you only have one request per stream).\r\n\r\nI can imagine an arrangement where a stream containing headers identifies the stream containing the request headers from the client.  Then the stream containing the body identifies the stream that contained the headers.\r\n\r\n## Saving stream identifiers\r\n\r\nThis is a minor point, though it could be relevant for very long-lived connections.\r\n\r\nQUIC currently insists on a strictly monotonically increasing stream identifier: stream N is followed by stream N+2 always, no skipping of streams is permitted.  Aside from wasting every other stream identifier, other streams are wasted by the mapping. \r\n\r\nGET requests don't include a body, but nonetheless require that the client send a HEADERS on stream N, then a FIN on stream N+2.  Including a reference to the initiating stream at the start of the body of a message would use some octets, but potentially fewer than would be used otherwise (particularly if the reference was a varlen encoding of the difference in stream numbers, which would rarely be anything other than 1).\r\n\r\nObviously, this is an optimization for the case where there are no bodies, but that is a case where the optimization is particularly valuable.  Making more requests (which more frequently have no bodies) during the early stages of a connection is critical to performance."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/171",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/171/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/171/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/171/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/171",
    "id": 201644609,
    "number": 171,
    "title": "First pass at REQUEST_RST",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-18T17:46:42Z",
    "updated_at": "2017-02-23T22:38:49Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/171",
      "html_url": "https://github.com/quicwg/base-drafts/pull/171",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/171.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/171.patch"
    },
    "body": "A rough draft of a fix for #165.  Key changes:\r\n\r\n- RST_STREAM kills only the sender's direction, not both.  (Retains the existing requirement to respond with RST_STREAM with another RST_STREAM if the stream isn't already closed, which eventually leads to the same result.)\r\n- New REQUEST_RST frame allows peer to solicit a RST_STREAM; text states that this reflects an app recv_close, and that received data is being discarded\r\n\r\nThis should solve the scenarios outlined in #165; a server can ask a client to RST_STREAM its own direction after having sent an early response.  Feedback welcome, of course -- please point out anything I've missed."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/170",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/170/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/170/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/170/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/170",
    "id": 201478058,
    "number": 170,
    "title": "Connection ID collisions",
    "user": {
      "login": "marten-seemann",
      "id": 1478487,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1478487?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marten-seemann",
      "html_url": "https://github.com/marten-seemann",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-01-18T04:42:06Z",
    "updated_at": "2017-02-16T03:02:23Z",
    "closed_at": null,
    "body": "There's currently no behavior defined for the case of a connection ID collision.\r\nThe probability for a collision of two 64 bit numbers is *really small*, if connections IDs are chosen randomly. For example, for a server handling 100,000 concurrent connections, the collision probability is about 3*10^-10.\r\nIt might therefore be justified to completely neglect this issue.\r\n\r\nAccording to the current draft, if a client initiates a handshake and chooses an existing connection ID, the server would just silently discard those packets, because it already switched to an encrypted connection and will regard them as undecryptable."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/167",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/167/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/167/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/167/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/167",
    "id": 201301292,
    "number": 167,
    "title": "Hash for unencrypted packets",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-17T14:28:16Z",
    "updated_at": "2017-01-25T01:44:32Z",
    "closed_at": null,
    "body": "QUIC originally specified a 12 byte hash for unencrypted packets.  This was dropped when QUIC crypto was swapped for the TLS 1.3 mapping.\r\n\r\nWe should add it back, since it is useful in eliminating corrupted packets and random internet junk.  And possibly in preventing reflection attacks mentioned in #147 "
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/166",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/166/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/166/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/166/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/166",
    "id": 201237736,
    "number": 166,
    "title": "Interdomain UX troubleshooting",
    "user": {
      "login": "emile22",
      "id": 4004607,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4004607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emile22",
      "html_url": "https://github.com/emile22",
      "followers_url": "https://api.github.com/users/emile22/followers",
      "following_url": "https://api.github.com/users/emile22/following{/other_user}",
      "gists_url": "https://api.github.com/users/emile22/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emile22/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emile22/subscriptions",
      "organizations_url": "https://api.github.com/users/emile22/orgs",
      "repos_url": "https://api.github.com/users/emile22/repos",
      "events_url": "https://api.github.com/users/emile22/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emile22/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481872905,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/ops",
        "name": "ops",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-17T10:36:35Z",
    "updated_at": "2017-02-03T03:02:07Z",
    "closed_at": null,
    "body": "Fast troubleshooting of QoS is mandatory to maintain end users high Quality of Experience;\r\nThere are my cases of troubleshooting. A typical example starts by the signaling to the ISP that its end-users are experimenting a significant decrease of QoE when using an Internet application. Typical point of failures are line cards memory errors or overloaded routers located somewhere on the path, either in the ISP domain or outside.\r\n\r\nThe ISP NOC has to localize asap the point of failure. Currently it proceeds by dichotomy (is the point of failure inside ISP domain or outside ?) using passive monitoring of packet lost and congestion. \r\n\r\nFollowing is the description of the parameters in use:\r\n\r\n1. Packet lost downstream (vice versa for upstream): \r\n- Measure of packet lost before the point of measure needs TCP sequence number\r\n- Measure of lost after the point of measure needs TCP ACK + SACK \r\n\r\n1. Congestion: \r\n- Detects that the congestion is located either before or after the point of measure\r\n- Analysis based on TCP ACK+SACK observation\r\n\r\nQUIC packets numbering should be continuous to allow packet loss monitoring. Flows control fields (ACK, SACK) are available in QUIC but encrypted. \r\n\r\nIt should be nice to use the approach of the TCPinc WG (with an integrity check mechanism) to keep visible the fields allowing fast troubleshooting of the network layer.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/165",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/165/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/165/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/165/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/165",
    "id": 201171466,
    "number": 165,
    "title": "Resetting Streams",
    "user": {
      "login": "marten-seemann",
      "id": 1478487,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1478487?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marten-seemann",
      "html_url": "https://github.com/marten-seemann",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-01-17T04:04:39Z",
    "updated_at": "2017-02-08T22:06:15Z",
    "closed_at": null,
    "body": "I'm writing this issue because there was some discussion about a change I made in #145, that seemed to be controversial. I spent a lot of time thinking about this, and realized that my changes in that PR were insufficient to address the problem. I think there are multiple issues in the stream state machinery.\r\n\r\n\r\n## Two common scenarios\r\n\r\nI will describe two scenarios where RST_STREAMs will be used regularly when using HTTP/QUIC.\r\n\r\n### Rejected PUSH\r\n\r\nThe sender (in this case a HTTP server) uses HTTP/2 Push to push a resource that the receiver isn't interested in. The receiver therefore sends a RST_STREAM with offset 0 (since it didn't send any data on that stream) to stop the sender from pushing the resource.\r\n\r\nWhen the sender receives the RST_STREAM, there are two options:\r\n\r\n- the transfer hasn't completed yet: The sender then stops sending data and sends a RST_STREAM with a byte offset equal to whatever highest data offset it sent. RST_STREAMs are transmitted reliably, so both sides will *eventually* receive the other side's RST_STREAM and make adjustments to their flow controller. There is no problem here.\r\n- the transfer has already completed (i.e. the sender already sent a STREAM frame with the FIN bit): According to the draft, STREAM frames on reset streams are not retransmitted. If the STREAM frame with the FIN gets lost, and the sender will never be able to make the necessary adjustments to its flow controller. (I'm not sure, but maybe this is what #163 is about).\r\n\r\nA fix for this problem is to **always** send a RST_STREAM as a response to a RST_STREAM, even if the stream already transitioned to the *half closed* state by sending a FIN bit.\r\n\r\n\r\n\r\n### POST to a 404 URI\r\n\r\nThe second example is more involved, since it involves data flowing bidirectionaly (note that for the PUSH case, the receiver never sent any data on the stream):\r\n\r\nThe sender (in this case a HTTP client) performs a POST request to an URI that the receiver is not reading from, e.g. a non-existing site (HTTP status code 404). The receiver will first send the HTTP response header, and then the (non-empty) 404 body. It will send send a RST_STREAM with a offset equivalent to the body length, to stop the sender, to stop it from sending more data.\r\n\r\nOn the sender side, we have the same situation as in the PUSH case, but let's assume we already resolved that issue.\r\n\r\nThere are two more issues here:\r\n\r\n- We must ensure reliable delivery of the response body (the 404 page). Thus, although the stream was reset, STREAM frames need to be retransmitted.\r\n- The receiver can only send the RST_STREAM **after** composing the response body (since the final byte offset has to be included). However, it would make sense to send the RST_STREAM as soon as possible, to stop the unwanted upload.\r\n\r\nThe first issue could be fixed by requiring that the peer that is resetting a stream MUST ensure reliable delivery of stream data it sent, whereas a peer that is receiving the RST_STREAM SHOULD NOT retransmit any stream data.\r\n\r\nThe second issue could be fixed by defining a RST_STREAM frame that doesn't include a byte offset (or introducing an RST error code that indicates that the byte offset is not set). The receiver in the above example would send this RST_STREAM before sending the 404 body. Since stream data is transmitted reliably, the sender would eventually receive a highest byte offset with a STREAM frame carrying the FIN flag.\r\n\r\n\r\n## Open points for discussion\r\n\r\nDo the three changes capture all possible use cases of resetting streams. Or do we need\r\n* a way to reset a stream such that the peer initiating the reset doesn't ensure the reliable transmission of the data it already sent\r\n* a way to reset a stream such that the peer receiving the RST has to ensure the reliable transmission up to a certain (which?) offset\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/161",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/161/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/161/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/161/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/161",
    "id": 201150892,
    "number": 161,
    "title": "Address change and consent to send",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2017-01-17T01:01:05Z",
    "updated_at": "2017-03-03T13:45:55Z",
    "closed_at": null,
    "body": "When a client changes IP addresses (for any reason, including NAT rebinding), the server has no way of gaining an assurance that the client has actually seen its packets.  That opens an attack where the attacker establishes a connection, then starts spoofing source address.  If the server starts to send to that source address without verifying that the client can receive packets, that's potentially a powerful packet amplification attack.\r\n\r\nIt's not sufficient to look for ACKs or other such things, because no client message includes proof that the client has actually received a packet from the server.  A client can just generate ACK and WINDOW_UPDATE frames as necessary, even new requests.  The only risk a client runs is that it overestimates the number of packets that the server has sent and sends too many spurious ACK frames, which the server will then recognize and react to."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/157",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/157/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/157/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/157/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/157",
    "id": 200923575,
    "number": 157,
    "title": "Updated information in retransmitted frames",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-16T03:26:15Z",
    "updated_at": "2017-01-20T02:56:19Z",
    "closed_at": null,
    "body": "WINDOW_UPDATE is cumulative.  Requiring retransmission of the exact value that was sent in the past doesn't make sense if a more recent value is available.  Rather than loss triggering a retransmission of the frame that was lost, loss should trigger the creation of a NEW frame with updated details.\r\n\r\nIn [this comment](https://github.com/quicwg/base-drafts/pull/150#discussion_r96152215) @janaiyengar observes that probably all of the control-like frames could be treated specially if they need to be retransmitted.  Changing the \"retransmission\" rule for control (i.e., non-STREAM) frames to allow for updated information to be included might not benefit many of the other frame types, though it might make sense to make the rule general to allow for some flexibility\r\n\r\nSee also #146 where there is discussion about verbatim retransmission of STREAM frames."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/151",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/151/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/151/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/151/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/151",
    "id": 200714969,
    "number": 151,
    "title": "Justify various constants used in recovery draft",
    "user": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-13T19:48:48Z",
    "updated_at": "2017-01-19T09:07:30Z",
    "closed_at": null,
    "body": "Mostly references to drafts/rfcs/papers, but complete justifications are needed for this draft to be standalone."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/148",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/148/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/148/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/148/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/148",
    "id": 200583834,
    "number": 148,
    "title": "QUIC packet header complexity",
    "user": {
      "login": "britram",
      "id": 1884116,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1884116?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/britram",
      "html_url": "https://github.com/britram",
      "followers_url": "https://api.github.com/users/britram/followers",
      "following_url": "https://api.github.com/users/britram/following{/other_user}",
      "gists_url": "https://api.github.com/users/britram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/britram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/britram/subscriptions",
      "organizations_url": "https://api.github.com/users/britram/orgs",
      "repos_url": "https://api.github.com/users/britram/repos",
      "events_url": "https://api.github.com/users/britram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/britram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ekr",
        "id": 1111457,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ekr",
        "html_url": "https://github.com/ekr",
        "followers_url": "https://api.github.com/users/ekr/followers",
        "following_url": "https://api.github.com/users/ekr/following{/other_user}",
        "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
        "organizations_url": "https://api.github.com/users/ekr/orgs",
        "repos_url": "https://api.github.com/users/ekr/repos",
        "events_url": "https://api.github.com/users/ekr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ekr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-01-13T09:29:36Z",
    "updated_at": "2017-01-26T06:08:24Z",
    "closed_at": null,
    "body": "The current design of the header with its multiple variable length and variable presence fields would seem to require inordinate sender and receiver code complexity. Complexity, especially in parsers (i.e., on the receiver side), is a source both of unclarity in specifications and errors in implementation. I note the following specific issues:\r\n\r\n(1) There are thirteen possible header lengths, and therefore data offsets : 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 21. Each of the header fields has a variety of possible offsets. This also increases the complexity of hardware offload implementations of QUIC, but is not complex enough to prevent their implementation and deployment.\r\n\r\n(2) There are combinations of flags that seem to be nonsensical and/or contradictory (e.g., the Packet Number Length codepoint adds 1, 2, 4, or 8 to the length if the Public Reset flag is clear, but 0 to the length if the Public Reset flag is set, see ; Public Reset and Version are mutually exclusive.)\r\n\r\n(3) There appears to be no consideration given to reducing confusability with other deployed UDP protocols in the first N bytes of the header -- see #147 \r\n\r\nI would suggest reducing the number of possible header layouts to reduce complexity, based on the following assumptions:\r\n\r\n(1) The set of variable header lengths will, at most, save a number of bytes per packet that will often be lost in the underflow of suboptimal path MTU discovery.\r\n\r\n(2) Varlen packet numbering makes sense if the packet number always starts from zero, but random initial packet numbers have other advantages; I presume we'll adopt them at some point. Packet numbers only need to be large enough to keep wrap-arounds to be induced by reordering, so 32 bits (as in the TCP sequence number space) is more than sufficient.\r\n\r\n(3) There is value in treating a version number as a magic number to help reduce the chance of misrecognition of non-QUIC packets as initial QUIC packets at an endpoint; for this 32 bits of version are more than enough, and 24 probably suffice. (This will require a redesign of the version number space, which we might want to do in light of #147 anyway).\r\n\r\n\r\nAs an initial proposal, I would propose that either both Connection ID and Version be present, or neither, and that packet number be always present and constant length. This reduces the set of necessary flags to three, leaving us with five flags for reserved/future use (four, if we go ahead and allocate multipath) and the following two header layouts:\r\n\r\nFull Header: 16 octets\r\n\r\n```\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|1|R|K|M| zero  |      version/magic (24 bits)                  |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                                                               |\r\n+-                      Connection ID                          -+\r\n|                                                               |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                       Packet Number                           |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n```\r\n\r\nTruncated Header: 5 octets\r\n\r\n```\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|0|R|K|M| zero  |                       Packet Number       . . .\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n. . . (cont'd)  |\r\n+-+-+-+-+-+-+-+-+\r\n```\r\n\r\nThe header invariant then becomes \"If bit 0x80 in octet 0 is 1, then the seven remaining bits of that octet are reserved for use as flags, and octets 1-3 are a 24-bit version number. If bit 0x80 in octet 0 is 0, then no version number is present; use previous version information for this 5-tuple.\" This can be further simplified by dropping the truncated header entirely, though for very short packets the overhead might be worth saving.\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/147",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/147/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/147/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/147/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/147",
    "id": 200582869,
    "number": 147,
    "title": "Reflection Attack Resistance",
    "user": {
      "login": "britram",
      "id": 1884116,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1884116?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/britram",
      "html_url": "https://github.com/britram",
      "followers_url": "https://api.github.com/users/britram/followers",
      "following_url": "https://api.github.com/users/britram/following{/other_user}",
      "gists_url": "https://api.github.com/users/britram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/britram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/britram/subscriptions",
      "organizations_url": "https://api.github.com/users/britram/orgs",
      "repos_url": "https://api.github.com/users/britram/repos",
      "events_url": "https://api.github.com/users/britram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/britram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-13T09:24:36Z",
    "updated_at": "2017-01-20T03:11:03Z",
    "closed_at": null,
    "body": "The design of the QUIC packet header should consider the ease of creating an apparently-valid first packet via reflection against existing, widely deployed UDP protocols (DNS and NTP being the top two here). All easily reflectable packets off these services should be trivially droppable by a QUIC server. Otherwise, there exist a variety of possible DDoS attacks (of which #135 is one case).\r\n\r\nFor 1-RTT first packets, the probablity of creating a valid ClientHello would seem to be negligible, though there might be some value in reducing the processing necessary to recognize and reject reflected garbage, or to allow it to be rejected before delivery to the server process.\r\n\r\nFor 0-RTT first packets, the header layout should be defined such that a version number (or other magic pattern, though the version number space is sparse enough that it can do double duty as a magic pattern) has an offset and bit pattern that does not occur in traffic that can be generated via reflection off common UDP services."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/144",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/144/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/144/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/144/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/144",
    "id": 200549680,
    "number": 144,
    "title": "What happens with lost packets that are detected when an Ack arrives",
    "user": {
      "login": "marten-seemann",
      "id": 1478487,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1478487?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marten-seemann",
      "html_url": "https://github.com/marten-seemann",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-13T05:15:10Z",
    "updated_at": "2017-01-26T07:21:47Z",
    "closed_at": null,
    "body": "In the loss recovery draft, `OnPacketAcked` is called for every packet that is acked by an incoming Ack frame.\r\nThis function calls `DetectLostPackets`, which returns a list of packets that are considered lost. However, this return value is never used in `OnPacketAcked`.\r\n\r\nFurthermore, looking at `DetectLostPackets` in detail, it seems to me that it would be sufficient to call that function once (with the largest observed packet as function parameter) when receiving an Ack."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/143",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/143/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/143/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/143/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/143",
    "id": 200520635,
    "number": 143,
    "title": "Repeating Version Negotiation",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-13T00:47:14Z",
    "updated_at": "2017-01-20T02:33:13Z",
    "closed_at": null,
    "body": "Servers shouldn't need to send more than one version negotiation packet, they only resend so that they are stateless and to deal with packet loss on the return path.\r\n\r\nClients should ignore version negotiation packets if they already have received packets from the server.  \r\n\r\nThis requirement on the client could be used for denial of service in the case where the legitimate server needs to use version negotiation.  If an attacker can race a legitimate looking ServerHello at the client (which isn't impossible), then the client will ignore the real server's attempt at version negotiation.  This is hard for an off-path attacker due to the need to echo certain parts of the client initial packet.  (I'd say connection ID is enough, but that might run afoul of #119.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/142",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/142/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/142/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/142/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/142",
    "id": 200514336,
    "number": 142,
    "title": "get_delay() undefined in loss detection pseudocode",
    "user": {
      "login": "martinduke",
      "id": 24398865,
      "avatar_url": "https://avatars1.githubusercontent.com/u/24398865?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinduke",
      "html_url": "https://github.com/martinduke",
      "followers_url": "https://api.github.com/users/martinduke/followers",
      "following_url": "https://api.github.com/users/martinduke/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinduke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinduke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinduke/subscriptions",
      "organizations_url": "https://api.github.com/users/martinduke/orgs",
      "repos_url": "https://api.github.com/users/martinduke/repos",
      "events_url": "https://api.github.com/users/martinduke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinduke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-13T00:00:48Z",
    "updated_at": "2017-01-16T14:24:18Z",
    "closed_at": null,
    "body": "In draft-ietf-quic-recovery.md\r\n\r\n`      if (rto_count = 0):\r\n        alarm_duration = max(200ms, smoothed_rtt + 4 x rttvar);\r\n      else:\r\n        alarm_duration = loss_detection_alarm.get_delay() << 1;\r\n      rto_count++;\r\n\r\nThe return value of get_delay() is not defined anywhere in the document."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/135",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/135/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/135/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/135/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/135",
    "id": 199731485,
    "number": 135,
    "title": "DoS using Version Negotiation Packets",
    "user": {
      "login": "marten-seemann",
      "id": 1478487,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1478487?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marten-seemann",
      "html_url": "https://github.com/marten-seemann",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 21,
    "created_at": "2017-01-10T04:41:45Z",
    "updated_at": "2017-02-03T03:52:29Z",
    "closed_at": null,
    "body": "I think I’ve found a DoS vulnerability in the current draft.\r\n\r\nLet’s say an attacker sends a first packet to a QUIC server (server A), but picks a version that the server doesn’t support. Furthermore, it spoofs the sender address of this packet to the address of another QUIC server (server B).\r\nThe packet sent by the client will look like this:\r\n1 byte Flags: 0x9 & Packet Number lengths bits\r\n8 byte Connection-ID\r\n4 byte Version Number\r\n1, 2, 3 or 4 byte Packet Number\r\nAEAD data\r\n\r\nServer A will discover that it doesn’t support the QUIC version that the client suggested, and reply with a Version Negotiation Packet, which will get sent to server B. The version negotiation packet will look like this:\r\n1 byte Flags: 0x9\r\n8 byte Connection-ID\r\n4 byte 1st Version Number\r\n4 byte 1st Version Number\r\n....\r\n\r\nIf server B doesn’t support the version sent as 1st Version Number by server A, it will not be able to distinguish this packet from a packet sent from a client (according to [Section 5.1.2](https://quicwg.github.io/base-drafts/draft-ietf-quic-transport.html#handling-packets-from-different-versions) it MUST NOT read anything from the packet except for the Flags byte, the Connection ID and the first Version Number). Furthermore, according to [Section 6.1](https://quicwg.github.io/base-drafts/draft-ietf-quic-transport.html#version-negotiation) the server MUST reply to server B with a Version Negotiation Packet.\r\nAssuming that server A doesn’t support the version sent as 1st Version Number by server B, A and B will continue sending each other Version Negotiation packets indefinitely. Note that the attacker only sent a single packet."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/134",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/134/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/134/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/134/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/134",
    "id": 199729829,
    "number": 134,
    "title": "Certificate compression",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-10T04:23:48Z",
    "updated_at": "2017-01-24T06:34:43Z",
    "closed_at": null,
    "body": "The document currently (though I hope to remove this) makes certificate compression a requirement of the cryptographic handshake.  TLS doesn't really do compression, though it does provided cached-info ([RFC 7924](https://tools.ietf.org/html/7924)).  Is this sufficient or do we need to ask the TLS working group for a compression feature.  I'm assuming that if we did need to ask, we would also be responsible for providing a design.\r\n\r\nNote that TLS 1.3 aims to provide confidentiality for certificates and compression is generally fraught with hazards that compromise confidentiality.  It also potentially a feature that could leak information about a client's past connections to servers.  If we due pursue this, any design we create would need to carefully consider these (and likely other) risks."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/133",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/133/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/133/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/133/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/133",
    "id": 199728912,
    "number": 133,
    "title": "Connection ID in version negotiation",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-10T04:13:43Z",
    "updated_at": "2017-01-26T04:51:36Z",
    "closed_at": null,
    "body": "When I wrote the section on what can change in different versions, I originally just left an unlabelled slot for the connection ID.  But @marten-seemann observed that the server is required to echo the connection ID in a version negotiation packet.\r\n\r\nI don't think that we need the server to echo the connection ID in this case.  That would allow us to restore the 8 octets to a version-specific field."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/128",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/128/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/128/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/128/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/128",
    "id": 199121188,
    "number": 128,
    "title": "We have two things called \"frame\"",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 517015633,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/needs-discussion",
        "name": "needs-discussion",
        "color": "d93f0b",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-06T04:18:17Z",
    "updated_at": "2017-03-06T23:41:36Z",
    "closed_at": null,
    "body": "The transport protocol has frames, and STREAM frames can contain frames for the HTTP mapping.  It's confusing.  We should work out how to deal with that."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/123",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/123/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/123/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/123/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/123",
    "id": 199078073,
    "number": 123,
    "title": "ACK frame timestamp format",
    "user": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-05T22:38:10Z",
    "updated_at": "2017-01-26T07:12:12Z",
    "closed_at": null,
    "body": "It may be possible to simplify the ACK frame, in particular, the timestamp section. We could conceivably make the \"Time from Largest Acked\" 16 bits, and simply have N-Timestamp-blocks, including this one. I think this is plausible."
  }
,
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/121",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/121/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/121/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/121/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/121",
    "id": 198676533,
    "number": 121,
    "title": "Version downgrade vulnerability",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-04T10:34:13Z",
    "updated_at": "2017-01-15T21:33:34Z",
    "closed_at": null,
    "body": "If we do this badly, there might be two versions of QUIC for which the transport parameters are confusable in a way that confounds the validation of version negotiation because the transport parameters are interpreted differently for different QUIC versions.\r\n\r\nWe need to write that into the security considerations.  We might recommend preserving the initial part of the transport parameters extension, or - better yet - using a new extension codepoint when the format needs to change."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/119",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/119/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/119/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/119/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/119",
    "id": 198672930,
    "number": 119,
    "title": "Server-proposed connection ID",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-01-04T10:15:52Z",
    "updated_at": "2017-02-15T17:30:17Z",
    "closed_at": null,
    "body": "QUIC currently has the ability to embed this in the source address token.  I guess that this is primarily because they both happen at the same time (during a stateless reject).\r\n\r\nWe could turn this into a transport parameter, I guess, but that doesn't work for HelloRetryRequest."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/116",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/116/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/116/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/116/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/116",
    "id": 198642646,
    "number": 116,
    "title": "Each COPT might be better as empty transport parameters",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-04T07:08:22Z",
    "updated_at": "2017-02-07T00:22:29Z",
    "closed_at": null,
    "body": "COPT is apparently repeated, once for each option.  \r\n\r\nOne thing that TLS implementations do is validate that there is only one instance of each extension.  This isn't possible for transport parameters if we require that COPT be used for a list of options.\r\n\r\nAlso, we can reduce the number of extension points in the protocol, we shouldn't pack a list of options into COPT when we have transport parameters for that."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/115",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/115/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/115/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/115/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/115",
    "id": 198632904,
    "number": 115,
    "title": "Connection migration",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-04T05:30:17Z",
    "updated_at": "2017-01-25T08:02:05Z",
    "closed_at": null,
    "body": "There are a bunch of things that need to be addressed here.  What is likely to happen is that this issue will turn into many smaller issues and this will eventually get closed as those become better understood.\r\n\r\n1. Reasons migration might be needed (mobility, NAT rebinding, routing changes, etc...)\r\n2. Routing considerations when migration occurs\r\n3. Privacy implications of linkability across migrations\r\n4. Verifying consent to send on a new path\r\n5. Establishing any desired middlebox state along the path\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/109",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/109/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/109/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/109/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/109",
    "id": 198414797,
    "number": 109,
    "title": "Time format",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2017-01-03T06:01:24Z",
    "updated_at": "2017-02-08T17:22:30Z",
    "closed_at": null,
    "body": "I note that the IEEE754 reference doesn't help."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/102",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/102/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/102/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/102/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/102",
    "id": 197626400,
    "number": 102,
    "title": "Timestamp Block - Zero indexing?",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-26T23:21:00Z",
    "updated_at": "2017-02-20T18:50:14Z",
    "closed_at": null,
    "body": "NumTimestamps is supposed to specify the \"total number of pairs following, including the First Timestamp.\"  If this is zero, presumably the Delta Largest Acked and First Timestamp fields are absent.  If this is one, presumably these fields are present, but no others are.\r\n\r\nThe *subsequent* fields then say they are repeated \"Num Timestamps\" times, which contradicts my logic above.  I'm guessing this should actually be \"Num Timestamps - 1\" times?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/95",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/95/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/95/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/95/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/95",
    "id": 197286451,
    "number": 95,
    "title": "CONNECT",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-22T23:17:15Z",
    "updated_at": "2017-01-25T04:47:27Z",
    "closed_at": null,
    "body": "Need discussion of how CONNECT works.  Initial thought:\r\n\r\n - Client does not close data stream after sending request\r\n - If server responds (on the message control stream) with success, the data stream is being relayed into a TCP connection by the server.\r\n\r\nIs there a QUIC-CONNECT?  (Probably not, and almost certainly not in this document.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/89",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/89/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/89/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/89/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/89",
    "id": 196243712,
    "number": 89,
    "title": "Version negotiation gaps",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-17T21:24:38Z",
    "updated_at": "2017-01-14T02:13:43Z",
    "closed_at": null,
    "body": "#87 covers improving the current use of ALPN and the Alt-Svc v= parameter for HTTP.  However, I think this is something that QUIC needs to solve generically, so forking off a separate issue for that.\r\n\r\nHere are the paths I see that we need to support:\r\n\r\n- **Client to server, first time:** This is inherently a 1-RTT handshake *if* the client guesses the version correctly; 2 RTTs if it's wrong.  This incents clients to attempt the most widely-deployed version of QUIC rather than their highest version.  Consequently, there needs to be a way for a conservative client to discover that a server supports a more advanced version.\r\n- **Client to server, subsequent:** The cached information should contain information about the server's supported versions so the client can come back with the same version as last time. The scenarios where one side has changed need consideration, though:\r\n    - **Client upgraded:** Would require client to cache server's full set of supported versions and compare against the client's supported set at connect time, not just caching the selected version.\r\n    - **Server upgraded:** The current mechanism offers no way for a client to discover that the server would have accepted a version it didn't initially offer, whether because the server didn't previously support it or the client is being conservative.\r\n\r\nIdeally, I'd like to see these solved for QUIC independent of Alt-Svc -- there will be other users besides HTTP.\r\n\r\nI think this could be solved by requiring the server to always send its Version Negotiation list in the crypto handshake, not just if a Version Negotiation packet was actually sent.  Clients can discover when the server supports a newer version than they attempted, and either know what to offer next time or actively open a new connection with the new version in parallel."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/81",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/81/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/81/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/81/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/81",
    "id": 194722956,
    "number": 81,
    "title": "Split from HTTP/2 framing?",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-12-09T23:34:28Z",
    "updated_at": "2017-02-21T23:41:03Z",
    "closed_at": null,
    "body": "Because of a stated goal from some implementers to reuse HTTP/2 framing as much as possible, the draft currently augments the HTTP/2 Frame Type Registry with a \"Supported Protocol\" column, allowing a frame to be defined for HTTP/2, HTTP/QUIC, or both.  A specification is required for each supported protocol.\r\n\r\nHowever, in the current draft, all but one \"Both\" frames are *different* between HTTP/2 and HTTP/QUIC.  Small or large, nearly every frame has required some modification to work over QUIC.  If we accept #80 , *all* frames will be different between HTTP/2 and HTTP/QUIC.\r\n\r\nAt that point, is there really a point in continuing to define HTTP/QUIC in relation to HTTP/2, or should we just admit that it's a new, separate thing that's heavily inspired by HTTP/2?  Separate registry, etc., and future extensions can register themselves with both if appropriate?  Or do we keep the same registry anyway to enforce that you'll never wind up with totally unrelated frames sharing the same value across the two protocols?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/76",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/76/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/76/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/76/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/76",
    "id": 194408709,
    "number": 76,
    "title": "CONTINUATION/END_HEADERS",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871627,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/http",
        "name": "http",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-08T18:26:10Z",
    "updated_at": "2017-02-21T08:48:55Z",
    "closed_at": null,
    "body": "In HTTP/2, the CONTINUATION frame was [much loathed](https://github.com/http2/http2-spec/pull/548), but ultimately deemed a necessary evil since there are some truly, ridiculously large headers out there (*\\*cough\\** Kerberos *\\*cough\\**).  The current HTTP/QUIC draft allows a frame to be 64KB long before decoding the HPACK.  Is this large enough?  That was the boundary we'd said it would take in HTTP/2 to require a single frame.\r\n\r\nIf not, the current draft uses the END_HEADERS bit to indicate that another HEADERS frame will follow, which is effectively the same as CONTINUATION.  The same is not currently defined for PUSH_PROMISE (which really ought to be much smaller).\r\n\r\nIf so, could we drop the END_HEADERS thing entirely and say that HPACK-bearing frames are fully self-contained?  It would simplify a lot of client mechanics."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/68",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/68/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/68/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/68/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/68",
    "id": 193294259,
    "number": 68,
    "title": "Explicit Congestion Notification (ECN)",
    "user": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-03T15:38:48Z",
    "updated_at": "2017-02-20T13:27:21Z",
    "closed_at": null,
    "body": "ECN is not currently mentioned in the recovery draft, but it should be included.\r\n\r\nMore importantly, the transport draft has no ability for the peer to communicate ECN marks back to the sender.  I suspect, like ECN, the use of this in the transport would be negotiable in the QUIC handshake.\r\n\r\nIn practice, there most userspace network stacks also cannot see if those marks are set when packets are read."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/67",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/67/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/67/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/67/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/67",
    "id": 193001138,
    "number": 67,
    "title": "Picking packet number length",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-12-02T00:25:36Z",
    "updated_at": "2016-12-02T00:25:36Z",
    "closed_at": null,
    "body": "The algorithm for picking the length of the packet number needs much better explanation, and probably a bunch of rationale to support that.\r\n\r\n(Marked as design so that any change gets proper discussion and review.)"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/66",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/66/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/66/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/66/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/66",
    "id": 193001006,
    "number": 66,
    "title": "Remove STOP_WAITING",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-02T00:24:36Z",
    "updated_at": "2017-02-09T21:26:32Z",
    "closed_at": null,
    "body": "@ianswett suggests that maybe this can be removed.  He didn't say why."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/65",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/65/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/65/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/65/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/65",
    "id": 192996225,
    "number": 65,
    "title": "BLOCKED usage requirements",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-01T23:54:00Z",
    "updated_at": "2017-01-24T00:47:14Z",
    "closed_at": null,
    "body": "Does this need to be MUST use?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/63",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/63/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/63/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/63/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/63",
    "id": 192995656,
    "number": 63,
    "title": "ACK retransmission",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481873040,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/recovery",
        "name": "recovery",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "ianswett",
      "id": 20072817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianswett",
      "html_url": "https://github.com/ianswett",
      "followers_url": "https://api.github.com/users/ianswett/followers",
      "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
      "organizations_url": "https://api.github.com/users/ianswett/orgs",
      "repos_url": "https://api.github.com/users/ianswett/repos",
      "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ianswett",
        "id": 20072817,
        "avatar_url": "https://avatars2.githubusercontent.com/u/20072817?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianswett",
        "html_url": "https://github.com/ianswett",
        "followers_url": "https://api.github.com/users/ianswett/followers",
        "following_url": "https://api.github.com/users/ianswett/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianswett/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianswett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianswett/subscriptions",
        "organizations_url": "https://api.github.com/users/ianswett/orgs",
        "repos_url": "https://api.github.com/users/ianswett/repos",
        "events_url": "https://api.github.com/users/ianswett/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianswett/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-12-01T23:50:17Z",
    "updated_at": "2017-01-25T06:37:34Z",
    "closed_at": null,
    "body": "We have rules about retransmission of STREAM frames.  ACK has similar properties in terms of what needs to be retransmitted.  Once an ACK has been acked, what should a sender do when constructing future ACK messages?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/61",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/61/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/61/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/61/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/61",
    "id": 192994977,
    "number": 61,
    "title": "Silent close",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-12-01T23:45:54Z",
    "updated_at": "2016-12-01T23:45:54Z",
    "closed_at": null,
    "body": "I think that this is one or other peer walking away from a conversation without saying goodbye.  If we're going to talk about silent closes, we need to explain what it is, why a peer might choose to do it, and the consequences for everyone involved if they exist."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/60",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/60/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/60/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/60/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/60",
    "id": 192994357,
    "number": 60,
    "title": "Stateless Reject mechanism needs description",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-12-01T23:42:04Z",
    "updated_at": "2017-01-24T00:45:35Z",
    "closed_at": null,
    "body": "Also, Martin Duke observes that it's not clear how QUIC would determine that the crypto handshake was incomplete after one message.\r\n\r\nI note that this might be aided by #35."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/58",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/58/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/58/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/58/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/58",
    "id": 192992485,
    "number": 58,
    "title": "Frame type extensions",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-01T23:30:54Z",
    "updated_at": "2016-12-08T20:22:05Z",
    "closed_at": null,
    "body": "Do we want them? How do we accommodate them?  What are their semantics if they aren't understood?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/56",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/56/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/56/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/56/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/56",
    "id": 192989770,
    "number": 56,
    "title": "Extending flags",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-12-01T23:16:02Z",
    "updated_at": "2017-01-26T06:20:30Z",
    "closed_at": null,
    "body": "We need to define how the public flags might be extended, or if it could be.  This has a pretty serious impact on #55."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/53",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/53/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/53/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/53/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/53",
    "id": 192463844,
    "number": 53,
    "title": "Figures should fit 80-column width",
    "user": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janaiyengar",
      "id": 11067604,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janaiyengar",
      "html_url": "https://github.com/janaiyengar",
      "followers_url": "https://api.github.com/users/janaiyengar/followers",
      "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
      "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
      "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
      "repos_url": "https://api.github.com/users/janaiyengar/repos",
      "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-30T03:07:47Z",
    "updated_at": "2016-11-30T04:16:06Z",
    "closed_at": null,
    "body": "Not all figures currently do."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/52",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/52/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/52/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/52/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/52",
    "id": 192458095,
    "number": 52,
    "title": "Source address validation",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "martinthomson",
        "id": 67641,
        "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinthomson",
        "html_url": "https://github.com/martinthomson",
        "followers_url": "https://api.github.com/users/martinthomson/followers",
        "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
        "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
        "organizations_url": "https://api.github.com/users/martinthomson/orgs",
        "repos_url": "https://api.github.com/users/martinthomson/repos",
        "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/martinthomson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-30T02:22:17Z",
    "updated_at": "2017-02-08T05:33:00Z",
    "closed_at": null,
    "body": "We need to write down how this happens:\r\n\r\n1. on the same connection\r\n2. on a subsequent connection"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/47",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/47/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/47/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/47/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/47",
    "id": 192443444,
    "number": 47,
    "title": "Expand core protocol error handling section",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-30T00:38:03Z",
    "updated_at": "2016-11-30T02:36:13Z",
    "closed_at": null,
    "body": "Error handling is rather... *distributed* in the core protocol spec.  The frames to signal errors are there, and there's a long list of error codes, but no generalized discussion of how errors are handled and what stream versus connection-level errors mean."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/45",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/45/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/45/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/45/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/45",
    "id": 192404568,
    "number": 45,
    "title": "Handshake protocol selection",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-11-29T21:28:11Z",
    "updated_at": "2017-03-03T00:29:35Z",
    "closed_at": null,
    "body": "It's currently unclear how two QUIC peers opening a connection know which handshake protocol to expect on Stream 1.\r\n\r\nSince the client has to include the opening handshake in its first flight, it has to at least be able to guess *a* handshake protocol that's acceptable to the server and include enough information for the server to know which one it's attempting.  Currently all the mechanisms for telling the client to retry with different options are at the TLS layer, which is too late.\r\n\r\nHow is this negotiated?  Is it baked into the QUIC version?  Is it specified as part of the application mapping (e.g. the HTTP mapping currently requires the TLS 1.3 handshake to be used) and therefore either supplied as part of the Alt-Svc record or implied by the port?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/44",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/44/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/44/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/44/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/44",
    "id": 192402994,
    "number": 44,
    "title": "DAG of documents",
    "user": {
      "login": "MikeBishop",
      "id": 4273797,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeBishop",
      "html_url": "https://github.com/MikeBishop",
      "followers_url": "https://api.github.com/users/MikeBishop/followers",
      "following_url": "https://api.github.com/users/MikeBishop/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeBishop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeBishop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeBishop/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeBishop/orgs",
      "repos_url": "https://api.github.com/users/MikeBishop/repos",
      "events_url": "https://api.github.com/users/MikeBishop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeBishop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-11-29T21:21:59Z",
    "updated_at": "2017-03-02T03:41:35Z",
    "closed_at": null,
    "body": "The submission was complicated by the fact that the documents cross-reference each other, which makes for some difficulty during the build/submission process.  Martin worked around that initially by just changing the references to be by title instead of by I-D name.  For the future, however, should we make the documents acyclic?  That would require clarifying the interfaces between the components we intend to make separable, which I think is a strictly good thing.\r\n\r\nMy initial inclination is that the core spec should reference none of the others, and each of the others should reference only the core spec.  The HTTP mapping doesn’t care what loss detection or security handshake is used, only that they provide the features needed by QUIC.  Currently, we explicitly require that the TLS handshake be used, but I’m not convinced that’s necessary.  (Alternately, we could reference the actual TLS RFC and require that “a handshake using TLS” be employed, rather than the particular handshake we’re currently defining.)  The loss detection and security components shouldn’t care about each other either, so long as they can trust that the jobs are getting done.  The core spec should contain the interfaces for all these intersection points.\r\n\r\nGiven that we’ve already agreed that we intend these pieces to be modular, I think this is *probably* an editorial-class change, albeit a big one."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/40",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/40/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/40/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/40/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/40",
    "id": 191945579,
    "number": 40,
    "title": "Variable-length fields",
    "user": {
      "login": "larseggert",
      "id": 200328,
      "avatar_url": "https://avatars2.githubusercontent.com/u/200328?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/larseggert",
      "html_url": "https://github.com/larseggert",
      "followers_url": "https://api.github.com/users/larseggert/followers",
      "following_url": "https://api.github.com/users/larseggert/following{/other_user}",
      "gists_url": "https://api.github.com/users/larseggert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/larseggert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/larseggert/subscriptions",
      "organizations_url": "https://api.github.com/users/larseggert/orgs",
      "repos_url": "https://api.github.com/users/larseggert/repos",
      "events_url": "https://api.github.com/users/larseggert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/larseggert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 489929683,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editor-ready",
        "name": "editor-ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "martinthomson",
        "id": 67641,
        "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinthomson",
        "html_url": "https://github.com/martinthomson",
        "followers_url": "https://api.github.com/users/martinthomson/followers",
        "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
        "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
        "organizations_url": "https://api.github.com/users/martinthomson/orgs",
        "repos_url": "https://api.github.com/users/martinthomson/repos",
        "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/martinthomson/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "janaiyengar",
        "id": 11067604,
        "avatar_url": "https://avatars1.githubusercontent.com/u/11067604?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janaiyengar",
        "html_url": "https://github.com/janaiyengar",
        "followers_url": "https://api.github.com/users/janaiyengar/followers",
        "following_url": "https://api.github.com/users/janaiyengar/following{/other_user}",
        "gists_url": "https://api.github.com/users/janaiyengar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janaiyengar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janaiyengar/subscriptions",
        "organizations_url": "https://api.github.com/users/janaiyengar/orgs",
        "repos_url": "https://api.github.com/users/janaiyengar/repos",
        "events_url": "https://api.github.com/users/janaiyengar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janaiyengar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-11-28T08:31:53Z",
    "updated_at": "2017-01-26T05:57:09Z",
    "closed_at": null,
    "body": "Packet numbers, stream offsets, various ACK information and many other fields can currently be encoded as variable length. Do we have some data on the benefits of this complexity? Would it be sufficient to use fewer increments, or could we even move to fixed length encoding for some or all of these fields?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/38",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/38/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/38/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/38/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/38",
    "id": 191927431,
    "number": 38,
    "title": "First flight size restriction",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-28T06:17:32Z",
    "updated_at": "2017-01-20T02:53:11Z",
    "closed_at": null,
    "body": "... relative to the client's ClientHello.\r\n\r\nWe don't want to design a packet amplifier, but it's highly likely that the server's Certificate will cause the server's messages to be at least a little bigger than the initial messages from the client.  We do need servers to send HelloRetryRequest and do source address validation, but how often?"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/37",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/37/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/37/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/37/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/37",
    "id": 191926219,
    "number": 37,
    "title": "Codify how handshake failures are written down",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-11-28T06:06:37Z",
    "updated_at": "2017-01-17T18:20:10Z",
    "closed_at": null,
    "body": "There's a bunch of places where we want to recommend that the handshake fails.  We need an editorial convention for how to write that down, which should include any error codes and messages that are sent at the same time."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/36",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/36/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/36/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/36/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/36",
    "id": 191925601,
    "number": 36,
    "title": "Improve discussion of unprotected packets and DoS",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-28T06:00:20Z",
    "updated_at": "2016-11-28T06:00:20Z",
    "closed_at": null,
    "body": "The attacker needs to be on path to create a valid-looking unprotected packet.  \r\n\r\nAlso, randomization doesn't help much if the attacker is on-path."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/34",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/34/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/34/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/34/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/34",
    "id": 191924559,
    "number": 34,
    "title": "ACK rules and packet protection",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "martinthomson",
        "id": 67641,
        "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinthomson",
        "html_url": "https://github.com/martinthomson",
        "followers_url": "https://api.github.com/users/martinthomson/followers",
        "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
        "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
        "organizations_url": "https://api.github.com/users/martinthomson/orgs",
        "repos_url": "https://api.github.com/users/martinthomson/repos",
        "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/martinthomson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-11-28T05:49:43Z",
    "updated_at": "2017-02-01T10:20:04Z",
    "closed_at": null,
    "body": "If we consider cleartext << 0-RTT << 1-RTT, then we might be able to establish a clear rule regarding acknowledgments.\r\n\r\nThe desired rule is that an ACK MUST be sent with the same or higher protection.\r\n\r\nHowever: This rule would mean that a server is required to ACK 0-RTT data with 1-RTT keys.  That's tricky, because loss or delay of the server's first flight also delays the server's ACKs of 0-RTT data (the server can't use 0-RTT keys)."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/33",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/33/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/33/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/33/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/33",
    "id": 191921917,
    "number": 33,
    "title": "Decryption failure == drop packet",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-28T05:23:07Z",
    "updated_at": "2016-11-28T05:23:07Z",
    "closed_at": null,
    "body": "We need to be absolutely explicit here: if unprotecting a packet fails, drop it.  \r\n\r\nIt's important that we have this rule to prevent trivial DoS attacks on connections.  Also, we need to make it clear that unauthenticated data does not get fed into the system unless we have very careful rules around how we handle that data."
  }
,
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/32",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/32/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/32/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/32/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/32",
    "id": 191921697,
    "number": 32,
    "title": "Reordering of really old packets",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871311,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-28T05:20:46Z",
    "updated_at": "2016-11-28T05:20:46Z",
    "closed_at": null,
    "body": "From @janaiyengar:\r\n\r\n> We need rules using\r\n> packet numbers, such that an old packet with a key phase matching the\r\n> current expected should not cause the connection to blow up.\r\n\r\nWith multiple key updates, there is a possibility that packets from epoch n could collide with packets that were sent in epoch n+2.  This is unlikely, but still something implementations need to handle.  It's not a problem as such unless you insist that connections blow up on decryption failure (which we shouldn't, that's a DoS vector).\r\n\r\nIt's also not a really bad problem because we have packet numbers that should identify the reordered packet as belonging to the older epoch.  We know what the keys were at that time (if we chose to retain them), so it's not even the case that we need to discard the packet every time.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/25",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/25/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/25/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/25/events",
    "html_url": "https://github.com/quicwg/base-drafts/issues/25",
    "id": 191635607,
    "number": 25,
    "title": "Key update forward secrecy",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars2.githubusercontent.com/u/67641?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871604,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/tls",
        "name": "tls",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-25T06:50:08Z",
    "updated_at": "2017-01-25T02:03:15Z",
    "closed_at": null,
    "body": "The design for TLS 1.3 KeyUpdate ensures that a compromise of keys after a KeyUpdate has been completed doesn't result in a compromise of all prior keys on that connection.\r\n\r\nThis is not true in QUIC.  QUIC uses a TLS exporter to obtain its initial seed keys.  As long as the exporter secret remains viable (and it will by default in most TLS stacks), then it will be able to compromise any QUIC packet protection keys.\r\n\r\nWe can't close the TLS connection on stream 1 early because it is desirable to have new session tickets issued to clients over time, especially if a server wants to update keys in response to mobility or other significant events.\r\n\r\nWe could recommend that TLS stacks provide an API for destroying an exporter secret, but that would interact poorly with things like token binding which use the exporter secret constantly."
  },
  {
    "url": "https://api.github.com/repos/quicwg/base-drafts/issues/20",
    "repository_url": "https://api.github.com/repos/quicwg/base-drafts",
    "labels_url": "https://api.github.com/repos/quicwg/base-drafts/issues/20/labels{/name}",
    "comments_url": "https://api.github.com/repos/quicwg/base-drafts/issues/20/comments",
    "events_url": "https://api.github.com/repos/quicwg/base-drafts/issues/20/events",
    "html_url": "https://github.com/quicwg/base-drafts/pull/20",
    "id": 191392156,
    "number": 20,
    "title": "Add support for a hash-based Public Reset packet",
    "user": {
      "login": "ekr",
      "id": 1111457,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1111457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekr",
      "html_url": "https://github.com/ekr",
      "followers_url": "https://api.github.com/users/ekr/followers",
      "following_url": "https://api.github.com/users/ekr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekr/subscriptions",
      "organizations_url": "https://api.github.com/users/ekr/orgs",
      "repos_url": "https://api.github.com/users/ekr/repos",
      "events_url": "https://api.github.com/users/ekr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 481871361,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 481871399,
        "url": "https://api.github.com/repos/quicwg/base-drafts/labels/transport",
        "name": "transport",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-23T22:19:58Z",
    "updated_at": "2017-02-06T23:37:15Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/quicwg/base-drafts/pulls/20",
      "html_url": "https://github.com/quicwg/base-drafts/pull/20",
      "diff_url": "https://github.com/quicwg/base-drafts/pull/20.diff",
      "patch_url": "https://github.com/quicwg/base-drafts/pull/20.patch"
    },
    "body": "The model here is that neither on-path nor off-path attackers should be able to forge one, but\r\nthat on-path elements should be able to validate the public reset."
  }
]
